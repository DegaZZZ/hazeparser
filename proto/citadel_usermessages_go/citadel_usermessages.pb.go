// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: citadel_usermessages.proto

package citadel_usermessages_go

import (
	citadel_gcmessages_common_go "github.com/DegaZZZ/hazeparser/proto/citadel_gcmessages_common_go"
	gameevents_go "github.com/DegaZZZ/hazeparser/proto/gameevents_go"
	networkbasetypes_go "github.com/DegaZZZ/hazeparser/proto/networkbasetypes_go"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CitadelUserMessageIds int32

const (
	CitadelUserMessageIds_k_EUserMsg_Damage                           CitadelUserMessageIds = 300
	CitadelUserMessageIds_k_EUserMsg_MapPing                          CitadelUserMessageIds = 303
	CitadelUserMessageIds_k_EUserMsg_TeamRewards                      CitadelUserMessageIds = 304
	CitadelUserMessageIds_k_EUserMsg_AbilityFailed                    CitadelUserMessageIds = 306
	CitadelUserMessageIds_k_EUserMsg_TriggerDamageFlash               CitadelUserMessageIds = 308
	CitadelUserMessageIds_k_EUserMsg_AbilitiesChanged                 CitadelUserMessageIds = 309
	CitadelUserMessageIds_k_EUserMsg_RecentDamageSummary              CitadelUserMessageIds = 310
	CitadelUserMessageIds_k_EUserMsg_SpectatorTeamChanged             CitadelUserMessageIds = 311
	CitadelUserMessageIds_k_EUserMsg_ChatWheel                        CitadelUserMessageIds = 312
	CitadelUserMessageIds_k_EUserMsg_GoldHistory                      CitadelUserMessageIds = 313
	CitadelUserMessageIds_k_EUserMsg_ChatMsg                          CitadelUserMessageIds = 314
	CitadelUserMessageIds_k_EUserMsg_QuickResponse                    CitadelUserMessageIds = 315
	CitadelUserMessageIds_k_EUserMsg_PostMatchDetails                 CitadelUserMessageIds = 316
	CitadelUserMessageIds_k_EUserMsg_ChatEvent                        CitadelUserMessageIds = 317
	CitadelUserMessageIds_k_EUserMsg_AbilityInterrupted               CitadelUserMessageIds = 318
	CitadelUserMessageIds_k_EUserMsg_HeroKilled                       CitadelUserMessageIds = 319
	CitadelUserMessageIds_k_EUserMsg_ReturnIdol                       CitadelUserMessageIds = 320
	CitadelUserMessageIds_k_EUserMsg_SetClientCameraAngles            CitadelUserMessageIds = 321
	CitadelUserMessageIds_k_EUserMsg_MapLine                          CitadelUserMessageIds = 322
	CitadelUserMessageIds_k_EUserMsg_BulletHit                        CitadelUserMessageIds = 323
	CitadelUserMessageIds_k_EUserMsg_ObjectiveMask                    CitadelUserMessageIds = 324
	CitadelUserMessageIds_k_EUserMsg_ModifierApplied                  CitadelUserMessageIds = 325
	CitadelUserMessageIds_k_EUserMsg_CameraController                 CitadelUserMessageIds = 326
	CitadelUserMessageIds_k_EUserMsg_AuraModifierApplied              CitadelUserMessageIds = 327
	CitadelUserMessageIds_k_EUserMsg_ObstructedShotFired              CitadelUserMessageIds = 329
	CitadelUserMessageIds_k_EUserMsg_AbilityLateFailure               CitadelUserMessageIds = 330
	CitadelUserMessageIds_k_EUserMsg_AbilityPing                      CitadelUserMessageIds = 331
	CitadelUserMessageIds_k_EUserMsg_PostProcessingAnim               CitadelUserMessageIds = 332
	CitadelUserMessageIds_k_EUserMsg_DeathReplayData                  CitadelUserMessageIds = 333
	CitadelUserMessageIds_k_EUserMsg_PlayerLifetimeStatInfo           CitadelUserMessageIds = 334
	CitadelUserMessageIds_k_EUserMsg_ForceShopClosed                  CitadelUserMessageIds = 336
	CitadelUserMessageIds_k_EUserMsg_StaminaDrained                   CitadelUserMessageIds = 337
	CitadelUserMessageIds_k_EUserMsg_AbilityNotify                    CitadelUserMessageIds = 338
	CitadelUserMessageIds_k_EUserMsg_GetDamageStatsResponse           CitadelUserMessageIds = 339
	CitadelUserMessageIds_k_EUserMsg_ParticipantStartSoundEvent       CitadelUserMessageIds = 340
	CitadelUserMessageIds_k_EUserMsg_ParticipantStopSoundEvent        CitadelUserMessageIds = 341
	CitadelUserMessageIds_k_EUserMsg_ParticipantStopSoundEventHash    CitadelUserMessageIds = 342
	CitadelUserMessageIds_k_EUserMsg_ParticipantSetSoundEventParams   CitadelUserMessageIds = 343
	CitadelUserMessageIds_k_EUserMsg_ParticipantSetLibraryStackFields CitadelUserMessageIds = 344
	CitadelUserMessageIds_k_EUserMsg_CurrencyChanged                  CitadelUserMessageIds = 345
	CitadelUserMessageIds_k_EUserMsg_GameOver                         CitadelUserMessageIds = 346
)

// Enum value maps for CitadelUserMessageIds.
var (
	CitadelUserMessageIds_name = map[int32]string{
		300: "k_EUserMsg_Damage",
		303: "k_EUserMsg_MapPing",
		304: "k_EUserMsg_TeamRewards",
		306: "k_EUserMsg_AbilityFailed",
		308: "k_EUserMsg_TriggerDamageFlash",
		309: "k_EUserMsg_AbilitiesChanged",
		310: "k_EUserMsg_RecentDamageSummary",
		311: "k_EUserMsg_SpectatorTeamChanged",
		312: "k_EUserMsg_ChatWheel",
		313: "k_EUserMsg_GoldHistory",
		314: "k_EUserMsg_ChatMsg",
		315: "k_EUserMsg_QuickResponse",
		316: "k_EUserMsg_PostMatchDetails",
		317: "k_EUserMsg_ChatEvent",
		318: "k_EUserMsg_AbilityInterrupted",
		319: "k_EUserMsg_HeroKilled",
		320: "k_EUserMsg_ReturnIdol",
		321: "k_EUserMsg_SetClientCameraAngles",
		322: "k_EUserMsg_MapLine",
		323: "k_EUserMsg_BulletHit",
		324: "k_EUserMsg_ObjectiveMask",
		325: "k_EUserMsg_ModifierApplied",
		326: "k_EUserMsg_CameraController",
		327: "k_EUserMsg_AuraModifierApplied",
		329: "k_EUserMsg_ObstructedShotFired",
		330: "k_EUserMsg_AbilityLateFailure",
		331: "k_EUserMsg_AbilityPing",
		332: "k_EUserMsg_PostProcessingAnim",
		333: "k_EUserMsg_DeathReplayData",
		334: "k_EUserMsg_PlayerLifetimeStatInfo",
		336: "k_EUserMsg_ForceShopClosed",
		337: "k_EUserMsg_StaminaDrained",
		338: "k_EUserMsg_AbilityNotify",
		339: "k_EUserMsg_GetDamageStatsResponse",
		340: "k_EUserMsg_ParticipantStartSoundEvent",
		341: "k_EUserMsg_ParticipantStopSoundEvent",
		342: "k_EUserMsg_ParticipantStopSoundEventHash",
		343: "k_EUserMsg_ParticipantSetSoundEventParams",
		344: "k_EUserMsg_ParticipantSetLibraryStackFields",
		345: "k_EUserMsg_CurrencyChanged",
		346: "k_EUserMsg_GameOver",
	}
	CitadelUserMessageIds_value = map[string]int32{
		"k_EUserMsg_Damage":                           300,
		"k_EUserMsg_MapPing":                          303,
		"k_EUserMsg_TeamRewards":                      304,
		"k_EUserMsg_AbilityFailed":                    306,
		"k_EUserMsg_TriggerDamageFlash":               308,
		"k_EUserMsg_AbilitiesChanged":                 309,
		"k_EUserMsg_RecentDamageSummary":              310,
		"k_EUserMsg_SpectatorTeamChanged":             311,
		"k_EUserMsg_ChatWheel":                        312,
		"k_EUserMsg_GoldHistory":                      313,
		"k_EUserMsg_ChatMsg":                          314,
		"k_EUserMsg_QuickResponse":                    315,
		"k_EUserMsg_PostMatchDetails":                 316,
		"k_EUserMsg_ChatEvent":                        317,
		"k_EUserMsg_AbilityInterrupted":               318,
		"k_EUserMsg_HeroKilled":                       319,
		"k_EUserMsg_ReturnIdol":                       320,
		"k_EUserMsg_SetClientCameraAngles":            321,
		"k_EUserMsg_MapLine":                          322,
		"k_EUserMsg_BulletHit":                        323,
		"k_EUserMsg_ObjectiveMask":                    324,
		"k_EUserMsg_ModifierApplied":                  325,
		"k_EUserMsg_CameraController":                 326,
		"k_EUserMsg_AuraModifierApplied":              327,
		"k_EUserMsg_ObstructedShotFired":              329,
		"k_EUserMsg_AbilityLateFailure":               330,
		"k_EUserMsg_AbilityPing":                      331,
		"k_EUserMsg_PostProcessingAnim":               332,
		"k_EUserMsg_DeathReplayData":                  333,
		"k_EUserMsg_PlayerLifetimeStatInfo":           334,
		"k_EUserMsg_ForceShopClosed":                  336,
		"k_EUserMsg_StaminaDrained":                   337,
		"k_EUserMsg_AbilityNotify":                    338,
		"k_EUserMsg_GetDamageStatsResponse":           339,
		"k_EUserMsg_ParticipantStartSoundEvent":       340,
		"k_EUserMsg_ParticipantStopSoundEvent":        341,
		"k_EUserMsg_ParticipantStopSoundEventHash":    342,
		"k_EUserMsg_ParticipantSetSoundEventParams":   343,
		"k_EUserMsg_ParticipantSetLibraryStackFields": 344,
		"k_EUserMsg_CurrencyChanged":                  345,
		"k_EUserMsg_GameOver":                         346,
	}
)

func (x CitadelUserMessageIds) Enum() *CitadelUserMessageIds {
	p := new(CitadelUserMessageIds)
	*p = x
	return p
}

func (x CitadelUserMessageIds) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CitadelUserMessageIds) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[0].Descriptor()
}

func (CitadelUserMessageIds) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[0]
}

func (x CitadelUserMessageIds) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CitadelUserMessageIds) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CitadelUserMessageIds(num)
	return nil
}

// Deprecated: Use CitadelUserMessageIds.Descriptor instead.
func (CitadelUserMessageIds) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{0}
}

type CitadelEntityMessageIds int32

const (
	CitadelEntityMessageIds_k_EEntityMsg_BreakablePropSpawnDebris CitadelEntityMessageIds = 500
)

// Enum value maps for CitadelEntityMessageIds.
var (
	CitadelEntityMessageIds_name = map[int32]string{
		500: "k_EEntityMsg_BreakablePropSpawnDebris",
	}
	CitadelEntityMessageIds_value = map[string]int32{
		"k_EEntityMsg_BreakablePropSpawnDebris": 500,
	}
)

func (x CitadelEntityMessageIds) Enum() *CitadelEntityMessageIds {
	p := new(CitadelEntityMessageIds)
	*p = x
	return p
}

func (x CitadelEntityMessageIds) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CitadelEntityMessageIds) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[1].Descriptor()
}

func (CitadelEntityMessageIds) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[1]
}

func (x CitadelEntityMessageIds) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CitadelEntityMessageIds) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CitadelEntityMessageIds(num)
	return nil
}

// Deprecated: Use CitadelEntityMessageIds.Descriptor instead.
func (CitadelEntityMessageIds) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{1}
}

type ChatMsgPingMarkerInfo int32

const (
	ChatMsgPingMarkerInfo_k_EPingMarkerInfo_ShowMarkerAndSound ChatMsgPingMarkerInfo = 0
	ChatMsgPingMarkerInfo_k_EPingMarkerInfo_HideMarkerAndSound ChatMsgPingMarkerInfo = 1
	ChatMsgPingMarkerInfo_k_EPingMarkerInfo_ShowMarkerOnSender ChatMsgPingMarkerInfo = 2
	ChatMsgPingMarkerInfo_k_EPingMarkerInfo_OnlyShowMarker     ChatMsgPingMarkerInfo = 3
	ChatMsgPingMarkerInfo_k_EPingMarkerInfo_OnlyPlaySound      ChatMsgPingMarkerInfo = 4
)

// Enum value maps for ChatMsgPingMarkerInfo.
var (
	ChatMsgPingMarkerInfo_name = map[int32]string{
		0: "k_EPingMarkerInfo_ShowMarkerAndSound",
		1: "k_EPingMarkerInfo_HideMarkerAndSound",
		2: "k_EPingMarkerInfo_ShowMarkerOnSender",
		3: "k_EPingMarkerInfo_OnlyShowMarker",
		4: "k_EPingMarkerInfo_OnlyPlaySound",
	}
	ChatMsgPingMarkerInfo_value = map[string]int32{
		"k_EPingMarkerInfo_ShowMarkerAndSound": 0,
		"k_EPingMarkerInfo_HideMarkerAndSound": 1,
		"k_EPingMarkerInfo_ShowMarkerOnSender": 2,
		"k_EPingMarkerInfo_OnlyShowMarker":     3,
		"k_EPingMarkerInfo_OnlyPlaySound":      4,
	}
)

func (x ChatMsgPingMarkerInfo) Enum() *ChatMsgPingMarkerInfo {
	p := new(ChatMsgPingMarkerInfo)
	*p = x
	return p
}

func (x ChatMsgPingMarkerInfo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMsgPingMarkerInfo) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[2].Descriptor()
}

func (ChatMsgPingMarkerInfo) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[2]
}

func (x ChatMsgPingMarkerInfo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ChatMsgPingMarkerInfo) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ChatMsgPingMarkerInfo(num)
	return nil
}

// Deprecated: Use ChatMsgPingMarkerInfo.Descriptor instead.
func (ChatMsgPingMarkerInfo) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{2}
}

type CameraOperation int32

const (
	CameraOperation_k_ECameraOp_Maintain CameraOperation = 2
	CameraOperation_k_ECameraOp_Approach CameraOperation = 3
	CameraOperation_k_ECameraOp_Spring   CameraOperation = 4
	CameraOperation_k_ECameraOp_Lerp     CameraOperation = 5
	CameraOperation_k_ECameraOp_Lag      CameraOperation = 6
)

// Enum value maps for CameraOperation.
var (
	CameraOperation_name = map[int32]string{
		2: "k_ECameraOp_Maintain",
		3: "k_ECameraOp_Approach",
		4: "k_ECameraOp_Spring",
		5: "k_ECameraOp_Lerp",
		6: "k_ECameraOp_Lag",
	}
	CameraOperation_value = map[string]int32{
		"k_ECameraOp_Maintain": 2,
		"k_ECameraOp_Approach": 3,
		"k_ECameraOp_Spring":   4,
		"k_ECameraOp_Lerp":     5,
		"k_ECameraOp_Lag":      6,
	}
)

func (x CameraOperation) Enum() *CameraOperation {
	p := new(CameraOperation)
	*p = x
	return p
}

func (x CameraOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[3].Descriptor()
}

func (CameraOperation) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[3]
}

func (x CameraOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraOperation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraOperation(num)
	return nil
}

// Deprecated: Use CameraOperation.Descriptor instead.
func (CameraOperation) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{3}
}

type CameraParam int32

const (
	CameraParam_k_EParam_ClearAllOps           CameraParam = 0
	CameraParam_k_EParam_ClearAllOpsForContext CameraParam = 1
	CameraParam_k_EParam_Distance              CameraParam = 2
	CameraParam_k_EParam_FOV                   CameraParam = 3
	CameraParam_k_EParam_TargetPosition        CameraParam = 4
	CameraParam_k_EParam_VertOffset            CameraParam = 5
	CameraParam_k_EParam_HorizOffset           CameraParam = 6
)

// Enum value maps for CameraParam.
var (
	CameraParam_name = map[int32]string{
		0: "k_EParam_ClearAllOps",
		1: "k_EParam_ClearAllOpsForContext",
		2: "k_EParam_Distance",
		3: "k_EParam_FOV",
		4: "k_EParam_TargetPosition",
		5: "k_EParam_VertOffset",
		6: "k_EParam_HorizOffset",
	}
	CameraParam_value = map[string]int32{
		"k_EParam_ClearAllOps":           0,
		"k_EParam_ClearAllOpsForContext": 1,
		"k_EParam_Distance":              2,
		"k_EParam_FOV":                   3,
		"k_EParam_TargetPosition":        4,
		"k_EParam_VertOffset":            5,
		"k_EParam_HorizOffset":           6,
	}
)

func (x CameraParam) Enum() *CameraParam {
	p := new(CameraParam)
	*p = x
	return p
}

func (x CameraParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraParam) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[4].Descriptor()
}

func (CameraParam) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[4]
}

func (x CameraParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraParam(num)
	return nil
}

// Deprecated: Use CameraParam.Descriptor instead.
func (CameraParam) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{4}
}

type CameraAction int32

const (
	CameraAction_k_EAction_AddOp              CameraAction = 0
	CameraAction_k_EAction_ClearAllOps        CameraAction = 1
	CameraAction_k_EAction_ClearOpsForContext CameraAction = 2
)

// Enum value maps for CameraAction.
var (
	CameraAction_name = map[int32]string{
		0: "k_EAction_AddOp",
		1: "k_EAction_ClearAllOps",
		2: "k_EAction_ClearOpsForContext",
	}
	CameraAction_value = map[string]int32{
		"k_EAction_AddOp":              0,
		"k_EAction_ClearAllOps":        1,
		"k_EAction_ClearOpsForContext": 2,
	}
)

func (x CameraAction) Enum() *CameraAction {
	p := new(CameraAction)
	*p = x
	return p
}

func (x CameraAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraAction) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[5].Descriptor()
}

func (CameraAction) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[5]
}

func (x CameraAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CameraAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CameraAction(num)
	return nil
}

// Deprecated: Use CameraAction.Descriptor instead.
func (CameraAction) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{5}
}

type ECitadelChatMessage int32

const (
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN ECitadelChatMessage = 1
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_UNPAUSED          ECitadelChatMessage = 2
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_AUTO_UNPAUSED     ECitadelChatMessage = 3
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_PAUSE_COUNTDOWN   ECitadelChatMessage = 4
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_PAUSED            ECitadelChatMessage = 5
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_YOUPAUSED         ECitadelChatMessage = 6
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_CANTPAUSE         ECitadelChatMessage = 7
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_CANTUNPAUSETEAM   ECitadelChatMessage = 8
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_NOPAUSESLEFT      ECitadelChatMessage = 9
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_CANTPAUSEYET      ECitadelChatMessage = 10
	ECitadelChatMessage_CITADEL_CHAT_MESSAGE_PREGAME_COUNTDOWN ECitadelChatMessage = 11
)

// Enum value maps for ECitadelChatMessage.
var (
	ECitadelChatMessage_name = map[int32]string{
		1:  "CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN",
		2:  "CITADEL_CHAT_MESSAGE_UNPAUSED",
		3:  "CITADEL_CHAT_MESSAGE_AUTO_UNPAUSED",
		4:  "CITADEL_CHAT_MESSAGE_PAUSE_COUNTDOWN",
		5:  "CITADEL_CHAT_MESSAGE_PAUSED",
		6:  "CITADEL_CHAT_MESSAGE_YOUPAUSED",
		7:  "CITADEL_CHAT_MESSAGE_CANTPAUSE",
		8:  "CITADEL_CHAT_MESSAGE_CANTUNPAUSETEAM",
		9:  "CITADEL_CHAT_MESSAGE_NOPAUSESLEFT",
		10: "CITADEL_CHAT_MESSAGE_CANTPAUSEYET",
		11: "CITADEL_CHAT_MESSAGE_PREGAME_COUNTDOWN",
	}
	ECitadelChatMessage_value = map[string]int32{
		"CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN": 1,
		"CITADEL_CHAT_MESSAGE_UNPAUSED":          2,
		"CITADEL_CHAT_MESSAGE_AUTO_UNPAUSED":     3,
		"CITADEL_CHAT_MESSAGE_PAUSE_COUNTDOWN":   4,
		"CITADEL_CHAT_MESSAGE_PAUSED":            5,
		"CITADEL_CHAT_MESSAGE_YOUPAUSED":         6,
		"CITADEL_CHAT_MESSAGE_CANTPAUSE":         7,
		"CITADEL_CHAT_MESSAGE_CANTUNPAUSETEAM":   8,
		"CITADEL_CHAT_MESSAGE_NOPAUSESLEFT":      9,
		"CITADEL_CHAT_MESSAGE_CANTPAUSEYET":      10,
		"CITADEL_CHAT_MESSAGE_PREGAME_COUNTDOWN": 11,
	}
)

func (x ECitadelChatMessage) Enum() *ECitadelChatMessage {
	p := new(ECitadelChatMessage)
	*p = x
	return p
}

func (x ECitadelChatMessage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECitadelChatMessage) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[6].Descriptor()
}

func (ECitadelChatMessage) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[6]
}

func (x ECitadelChatMessage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECitadelChatMessage) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECitadelChatMessage(num)
	return nil
}

// Deprecated: Use ECitadelChatMessage.Descriptor instead.
func (ECitadelChatMessage) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{6}
}

type PostProcessingGameStates int32

const (
	PostProcessingGameStates_PostProcState_Killed        PostProcessingGameStates = 0
	PostProcessingGameStates_PostProcState_Black         PostProcessingGameStates = 1
	PostProcessingGameStates_PostProcState_Blinded       PostProcessingGameStates = 2
	PostProcessingGameStates_PostProcState_ShivPossessed PostProcessingGameStates = 3
)

// Enum value maps for PostProcessingGameStates.
var (
	PostProcessingGameStates_name = map[int32]string{
		0: "PostProcState_Killed",
		1: "PostProcState_Black",
		2: "PostProcState_Blinded",
		3: "PostProcState_ShivPossessed",
	}
	PostProcessingGameStates_value = map[string]int32{
		"PostProcState_Killed":        0,
		"PostProcState_Black":         1,
		"PostProcState_Blinded":       2,
		"PostProcState_ShivPossessed": 3,
	}
)

func (x PostProcessingGameStates) Enum() *PostProcessingGameStates {
	p := new(PostProcessingGameStates)
	*p = x
	return p
}

func (x PostProcessingGameStates) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostProcessingGameStates) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[7].Descriptor()
}

func (PostProcessingGameStates) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[7]
}

func (x PostProcessingGameStates) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PostProcessingGameStates) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PostProcessingGameStates(num)
	return nil
}

// Deprecated: Use PostProcessingGameStates.Descriptor instead.
func (PostProcessingGameStates) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{7}
}

type CCitadelUserMsg_AbilitiesChanged_Change int32

const (
	CCitadelUserMsg_AbilitiesChanged_EInvalid                 CCitadelUserMsg_AbilitiesChanged_Change = -1
	CCitadelUserMsg_AbilitiesChanged_EPurchased               CCitadelUserMsg_AbilitiesChanged_Change = 0
	CCitadelUserMsg_AbilitiesChanged_EUpgraded                CCitadelUserMsg_AbilitiesChanged_Change = 1
	CCitadelUserMsg_AbilitiesChanged_ESold                    CCitadelUserMsg_AbilitiesChanged_Change = 2
	CCitadelUserMsg_AbilitiesChanged_ESwappedActivatedAbility CCitadelUserMsg_AbilitiesChanged_Change = 3
)

// Enum value maps for CCitadelUserMsg_AbilitiesChanged_Change.
var (
	CCitadelUserMsg_AbilitiesChanged_Change_name = map[int32]string{
		-1: "EInvalid",
		0:  "EPurchased",
		1:  "EUpgraded",
		2:  "ESold",
		3:  "ESwappedActivatedAbility",
	}
	CCitadelUserMsg_AbilitiesChanged_Change_value = map[string]int32{
		"EInvalid":                 -1,
		"EPurchased":               0,
		"EUpgraded":                1,
		"ESold":                    2,
		"ESwappedActivatedAbility": 3,
	}
)

func (x CCitadelUserMsg_AbilitiesChanged_Change) Enum() *CCitadelUserMsg_AbilitiesChanged_Change {
	p := new(CCitadelUserMsg_AbilitiesChanged_Change)
	*p = x
	return p
}

func (x CCitadelUserMsg_AbilitiesChanged_Change) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CCitadelUserMsg_AbilitiesChanged_Change) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_usermessages_proto_enumTypes[8].Descriptor()
}

func (CCitadelUserMsg_AbilitiesChanged_Change) Type() protoreflect.EnumType {
	return &file_citadel_usermessages_proto_enumTypes[8]
}

func (x CCitadelUserMsg_AbilitiesChanged_Change) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CCitadelUserMsg_AbilitiesChanged_Change) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CCitadelUserMsg_AbilitiesChanged_Change(num)
	return nil
}

// Deprecated: Use CCitadelUserMsg_AbilitiesChanged_Change.Descriptor instead.
func (CCitadelUserMsg_AbilitiesChanged_Change) EnumDescriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{10, 0}
}

type CUserMessageEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Empty *uint32 `protobuf:"varint,1,opt,name=empty" json:"empty,omitempty"`
}

func (x *CUserMessageEmpty) Reset() {
	*x = CUserMessageEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageEmpty) ProtoMessage() {}

func (x *CUserMessageEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageEmpty.ProtoReflect.Descriptor instead.
func (*CUserMessageEmpty) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{0}
}

func (x *CUserMessageEmpty) GetEmpty() uint32 {
	if x != nil && x.Empty != nil {
		return *x.Empty
	}
	return 0
}

type CCitadelUserMessage_Damage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Damage            *int32                          `protobuf:"varint,1,opt,name=damage" json:"damage,omitempty"`
	PreDamage         *int32                          `protobuf:"varint,2,opt,name=pre_damage,json=preDamage" json:"pre_damage,omitempty"`
	Type              *int32                          `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	CitadelType       *int32                          `protobuf:"varint,4,opt,name=citadel_type,json=citadelType" json:"citadel_type,omitempty"`
	Origin            *networkbasetypes_go.CMsgVector `protobuf:"bytes,5,opt,name=origin" json:"origin,omitempty"`
	EntindexVictim    *int32                          `protobuf:"varint,6,opt,name=entindex_victim,json=entindexVictim,def=-1" json:"entindex_victim,omitempty"`
	EntindexInflictor *int32                          `protobuf:"varint,7,opt,name=entindex_inflictor,json=entindexInflictor,def=-1" json:"entindex_inflictor,omitempty"`
	EntindexAttacker  *int32                          `protobuf:"varint,8,opt,name=entindex_attacker,json=entindexAttacker,def=-1" json:"entindex_attacker,omitempty"`
	EntindexAbility   *int32                          `protobuf:"varint,9,opt,name=entindex_ability,json=entindexAbility,def=-1" json:"entindex_ability,omitempty"`
	DamageAbsorbed    *int32                          `protobuf:"varint,10,opt,name=damage_absorbed,json=damageAbsorbed" json:"damage_absorbed,omitempty"`
	VictimHealthMax   *int32                          `protobuf:"varint,11,opt,name=victim_health_max,json=victimHealthMax" json:"victim_health_max,omitempty"`
	VictimHealthNew   *int32                          `protobuf:"varint,12,opt,name=victim_health_new,json=victimHealthNew" json:"victim_health_new,omitempty"`
	Flags             *uint64                         `protobuf:"varint,13,opt,name=flags" json:"flags,omitempty"`
	AbilityId         *uint32                         `protobuf:"varint,14,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	AttackerClass     *uint32                         `protobuf:"varint,15,opt,name=attacker_class,json=attackerClass" json:"attacker_class,omitempty"`
	VictimClass       *uint32                         `protobuf:"varint,16,opt,name=victim_class,json=victimClass" json:"victim_class,omitempty"`
	VictimShieldMax   *int32                          `protobuf:"varint,17,opt,name=victim_shield_max,json=victimShieldMax" json:"victim_shield_max,omitempty"`
	VictimShieldNew   *int32                          `protobuf:"varint,18,opt,name=victim_shield_new,json=victimShieldNew" json:"victim_shield_new,omitempty"`
	Hits              *int32                          `protobuf:"varint,19,opt,name=hits" json:"hits,omitempty"`
	HealthLost        *int32                          `protobuf:"varint,20,opt,name=health_lost,json=healthLost" json:"health_lost,omitempty"`
}

// Default values for CCitadelUserMessage_Damage fields.
const (
	Default_CCitadelUserMessage_Damage_EntindexVictim    = int32(-1)
	Default_CCitadelUserMessage_Damage_EntindexInflictor = int32(-1)
	Default_CCitadelUserMessage_Damage_EntindexAttacker  = int32(-1)
	Default_CCitadelUserMessage_Damage_EntindexAbility   = int32(-1)
)

func (x *CCitadelUserMessage_Damage) Reset() {
	*x = CCitadelUserMessage_Damage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_Damage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_Damage) ProtoMessage() {}

func (x *CCitadelUserMessage_Damage) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_Damage.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_Damage) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{1}
}

func (x *CCitadelUserMessage_Damage) GetDamage() int32 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetPreDamage() int32 {
	if x != nil && x.PreDamage != nil {
		return *x.PreDamage
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetCitadelType() int32 {
	if x != nil && x.CitadelType != nil {
		return *x.CitadelType
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetOrigin() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *CCitadelUserMessage_Damage) GetEntindexVictim() int32 {
	if x != nil && x.EntindexVictim != nil {
		return *x.EntindexVictim
	}
	return Default_CCitadelUserMessage_Damage_EntindexVictim
}

func (x *CCitadelUserMessage_Damage) GetEntindexInflictor() int32 {
	if x != nil && x.EntindexInflictor != nil {
		return *x.EntindexInflictor
	}
	return Default_CCitadelUserMessage_Damage_EntindexInflictor
}

func (x *CCitadelUserMessage_Damage) GetEntindexAttacker() int32 {
	if x != nil && x.EntindexAttacker != nil {
		return *x.EntindexAttacker
	}
	return Default_CCitadelUserMessage_Damage_EntindexAttacker
}

func (x *CCitadelUserMessage_Damage) GetEntindexAbility() int32 {
	if x != nil && x.EntindexAbility != nil {
		return *x.EntindexAbility
	}
	return Default_CCitadelUserMessage_Damage_EntindexAbility
}

func (x *CCitadelUserMessage_Damage) GetDamageAbsorbed() int32 {
	if x != nil && x.DamageAbsorbed != nil {
		return *x.DamageAbsorbed
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetVictimHealthMax() int32 {
	if x != nil && x.VictimHealthMax != nil {
		return *x.VictimHealthMax
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetVictimHealthNew() int32 {
	if x != nil && x.VictimHealthNew != nil {
		return *x.VictimHealthNew
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetFlags() uint64 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetAttackerClass() uint32 {
	if x != nil && x.AttackerClass != nil {
		return *x.AttackerClass
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetVictimClass() uint32 {
	if x != nil && x.VictimClass != nil {
		return *x.VictimClass
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetVictimShieldMax() int32 {
	if x != nil && x.VictimShieldMax != nil {
		return *x.VictimShieldMax
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetVictimShieldNew() int32 {
	if x != nil && x.VictimShieldNew != nil {
		return *x.VictimShieldNew
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetHits() int32 {
	if x != nil && x.Hits != nil {
		return *x.Hits
	}
	return 0
}

func (x *CCitadelUserMessage_Damage) GetHealthLost() int32 {
	if x != nil && x.HealthLost != nil {
		return *x.HealthLost
	}
	return 0
}

type PingCommonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingMessageId    *uint32                         `protobuf:"varint,1,opt,name=ping_message_id,json=pingMessageId" json:"ping_message_id,omitempty"`
	PingLocation     *networkbasetypes_go.CMsgVector `protobuf:"bytes,2,opt,name=ping_location,json=pingLocation" json:"ping_location,omitempty"`
	EntityIndex      *uint32                         `protobuf:"varint,3,opt,name=entity_index,json=entityIndex,def=16777215" json:"entity_index,omitempty"`
	SenderPlayerSlot *int32                          `protobuf:"varint,4,opt,name=sender_player_slot,json=senderPlayerSlot,def=-1" json:"sender_player_slot,omitempty"`
	SpeechConcept    *int32                          `protobuf:"varint,5,opt,name=speech_concept,json=speechConcept" json:"speech_concept,omitempty"`
	ResponseChosen   *string                         `protobuf:"bytes,6,opt,name=response_chosen,json=responseChosen" json:"response_chosen,omitempty"`
	CooldownTime     *float32                        `protobuf:"fixed32,7,opt,name=cooldown_time,json=cooldownTime" json:"cooldown_time,omitempty"`
}

// Default values for PingCommonData fields.
const (
	Default_PingCommonData_EntityIndex      = uint32(16777215)
	Default_PingCommonData_SenderPlayerSlot = int32(-1)
)

func (x *PingCommonData) Reset() {
	*x = PingCommonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingCommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingCommonData) ProtoMessage() {}

func (x *PingCommonData) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingCommonData.ProtoReflect.Descriptor instead.
func (*PingCommonData) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{2}
}

func (x *PingCommonData) GetPingMessageId() uint32 {
	if x != nil && x.PingMessageId != nil {
		return *x.PingMessageId
	}
	return 0
}

func (x *PingCommonData) GetPingLocation() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.PingLocation
	}
	return nil
}

func (x *PingCommonData) GetEntityIndex() uint32 {
	if x != nil && x.EntityIndex != nil {
		return *x.EntityIndex
	}
	return Default_PingCommonData_EntityIndex
}

func (x *PingCommonData) GetSenderPlayerSlot() int32 {
	if x != nil && x.SenderPlayerSlot != nil {
		return *x.SenderPlayerSlot
	}
	return Default_PingCommonData_SenderPlayerSlot
}

func (x *PingCommonData) GetSpeechConcept() int32 {
	if x != nil && x.SpeechConcept != nil {
		return *x.SpeechConcept
	}
	return 0
}

func (x *PingCommonData) GetResponseChosen() string {
	if x != nil && x.ResponseChosen != nil {
		return *x.ResponseChosen
	}
	return ""
}

func (x *PingCommonData) GetCooldownTime() float32 {
	if x != nil && x.CooldownTime != nil {
		return *x.CooldownTime
	}
	return 0
}

type CCitadelUserMsg_MapPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingData               *PingCommonData        `protobuf:"bytes,1,req,name=ping_data,json=pingData" json:"ping_data,omitempty"`
	EventType              *uint32                `protobuf:"varint,2,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	PingMarkerAndSoundInfo *ChatMsgPingMarkerInfo `protobuf:"varint,3,opt,name=ping_marker_and_sound_info,json=pingMarkerAndSoundInfo,enum=ChatMsgPingMarkerInfo,def=0" json:"ping_marker_and_sound_info,omitempty"`
	PingedEnemyEntity      *bool                  `protobuf:"varint,4,opt,name=pinged_enemy_entity,json=pingedEnemyEntity" json:"pinged_enemy_entity,omitempty"`
	PingedEntityClass      *uint32                `protobuf:"varint,5,opt,name=pinged_entity_class,json=pingedEntityClass" json:"pinged_entity_class,omitempty"`
	IsMinimapPing          *bool                  `protobuf:"varint,6,opt,name=is_minimap_ping,json=isMinimapPing" json:"is_minimap_ping,omitempty"`
	PingedHeroName         *string                `protobuf:"bytes,7,opt,name=pinged_hero_name,json=pingedHeroName" json:"pinged_hero_name,omitempty"`
	IsBlindPing            *bool                  `protobuf:"varint,8,opt,name=is_blind_ping,json=isBlindPing" json:"is_blind_ping,omitempty"`
}

// Default values for CCitadelUserMsg_MapPing fields.
const (
	Default_CCitadelUserMsg_MapPing_PingMarkerAndSoundInfo = ChatMsgPingMarkerInfo_k_EPingMarkerInfo_ShowMarkerAndSound
)

func (x *CCitadelUserMsg_MapPing) Reset() {
	*x = CCitadelUserMsg_MapPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_MapPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_MapPing) ProtoMessage() {}

func (x *CCitadelUserMsg_MapPing) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_MapPing.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_MapPing) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{3}
}

func (x *CCitadelUserMsg_MapPing) GetPingData() *PingCommonData {
	if x != nil {
		return x.PingData
	}
	return nil
}

func (x *CCitadelUserMsg_MapPing) GetEventType() uint32 {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return 0
}

func (x *CCitadelUserMsg_MapPing) GetPingMarkerAndSoundInfo() ChatMsgPingMarkerInfo {
	if x != nil && x.PingMarkerAndSoundInfo != nil {
		return *x.PingMarkerAndSoundInfo
	}
	return Default_CCitadelUserMsg_MapPing_PingMarkerAndSoundInfo
}

func (x *CCitadelUserMsg_MapPing) GetPingedEnemyEntity() bool {
	if x != nil && x.PingedEnemyEntity != nil {
		return *x.PingedEnemyEntity
	}
	return false
}

func (x *CCitadelUserMsg_MapPing) GetPingedEntityClass() uint32 {
	if x != nil && x.PingedEntityClass != nil {
		return *x.PingedEntityClass
	}
	return 0
}

func (x *CCitadelUserMsg_MapPing) GetIsMinimapPing() bool {
	if x != nil && x.IsMinimapPing != nil {
		return *x.IsMinimapPing
	}
	return false
}

func (x *CCitadelUserMsg_MapPing) GetPingedHeroName() string {
	if x != nil && x.PingedHeroName != nil {
		return *x.PingedHeroName
	}
	return ""
}

func (x *CCitadelUserMsg_MapPing) GetIsBlindPing() bool {
	if x != nil && x.IsBlindPing != nil {
		return *x.IsBlindPing
	}
	return false
}

type CCitadelUserMsg_PingWheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingData          *PingCommonData `protobuf:"bytes,1,req,name=ping_data,json=pingData" json:"ping_data,omitempty"`
	PingWheelOptionId *uint32         `protobuf:"varint,2,opt,name=ping_wheel_option_id,json=pingWheelOptionId" json:"ping_wheel_option_id,omitempty"`
}

func (x *CCitadelUserMsg_PingWheel) Reset() {
	*x = CCitadelUserMsg_PingWheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_PingWheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_PingWheel) ProtoMessage() {}

func (x *CCitadelUserMsg_PingWheel) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_PingWheel.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_PingWheel) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{4}
}

func (x *CCitadelUserMsg_PingWheel) GetPingData() *PingCommonData {
	if x != nil {
		return x.PingData
	}
	return nil
}

func (x *CCitadelUserMsg_PingWheel) GetPingWheelOptionId() uint32 {
	if x != nil && x.PingWheelOptionId != nil {
		return *x.PingWheelOptionId
	}
	return 0
}

type CCitadelUserMsg_AbilityPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingData               *PingCommonData        `protobuf:"bytes,1,opt,name=ping_data,json=pingData" json:"ping_data,omitempty"`
	AbilityId              *uint32                `protobuf:"varint,2,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	AbilityCooldown        *float32               `protobuf:"fixed32,3,opt,name=ability_cooldown,json=abilityCooldown" json:"ability_cooldown,omitempty"`
	PingMarkerAndSoundInfo *ChatMsgPingMarkerInfo `protobuf:"varint,4,opt,name=ping_marker_and_sound_info,json=pingMarkerAndSoundInfo,enum=ChatMsgPingMarkerInfo,def=0" json:"ping_marker_and_sound_info,omitempty"`
}

// Default values for CCitadelUserMsg_AbilityPing fields.
const (
	Default_CCitadelUserMsg_AbilityPing_PingMarkerAndSoundInfo = ChatMsgPingMarkerInfo_k_EPingMarkerInfo_ShowMarkerAndSound
)

func (x *CCitadelUserMsg_AbilityPing) Reset() {
	*x = CCitadelUserMsg_AbilityPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_AbilityPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_AbilityPing) ProtoMessage() {}

func (x *CCitadelUserMsg_AbilityPing) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_AbilityPing.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_AbilityPing) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{5}
}

func (x *CCitadelUserMsg_AbilityPing) GetPingData() *PingCommonData {
	if x != nil {
		return x.PingData
	}
	return nil
}

func (x *CCitadelUserMsg_AbilityPing) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *CCitadelUserMsg_AbilityPing) GetAbilityCooldown() float32 {
	if x != nil && x.AbilityCooldown != nil {
		return *x.AbilityCooldown
	}
	return 0
}

func (x *CCitadelUserMsg_AbilityPing) GetPingMarkerAndSoundInfo() ChatMsgPingMarkerInfo {
	if x != nil && x.PingMarkerAndSoundInfo != nil {
		return *x.PingMarkerAndSoundInfo
	}
	return Default_CCitadelUserMsg_AbilityPing_PingMarkerAndSoundInfo
}

type CCitadelUserMsg_QuickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingData                  *PingCommonData                             `protobuf:"bytes,1,req,name=ping_data,json=pingData" json:"ping_data,omitempty"`
	RespondingToPingMessageId *uint32                                     `protobuf:"varint,2,opt,name=responding_to_ping_message_id,json=respondingToPingMessageId" json:"responding_to_ping_message_id,omitempty"`
	RespondingToPlayerSlot    *int32                                      `protobuf:"varint,3,opt,name=responding_to_player_slot,json=respondingToPlayerSlot,def=-1" json:"responding_to_player_slot,omitempty"`
	LaneColor                 *citadel_gcmessages_common_go.CMsgLaneColor `protobuf:"varint,4,opt,name=lane_color,json=laneColor,enum=CMsgLaneColor,def=0" json:"lane_color,omitempty"`
}

// Default values for CCitadelUserMsg_QuickResponse fields.
const (
	Default_CCitadelUserMsg_QuickResponse_RespondingToPlayerSlot = int32(-1)
	Default_CCitadelUserMsg_QuickResponse_LaneColor              = citadel_gcmessages_common_go.CMsgLaneColor(0) // citadel_gcmessages_common_go.CMsgLaneColor_k_ELaneColor_Invalid
)

func (x *CCitadelUserMsg_QuickResponse) Reset() {
	*x = CCitadelUserMsg_QuickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_QuickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_QuickResponse) ProtoMessage() {}

func (x *CCitadelUserMsg_QuickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_QuickResponse.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_QuickResponse) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{6}
}

func (x *CCitadelUserMsg_QuickResponse) GetPingData() *PingCommonData {
	if x != nil {
		return x.PingData
	}
	return nil
}

func (x *CCitadelUserMsg_QuickResponse) GetRespondingToPingMessageId() uint32 {
	if x != nil && x.RespondingToPingMessageId != nil {
		return *x.RespondingToPingMessageId
	}
	return 0
}

func (x *CCitadelUserMsg_QuickResponse) GetRespondingToPlayerSlot() int32 {
	if x != nil && x.RespondingToPlayerSlot != nil {
		return *x.RespondingToPlayerSlot
	}
	return Default_CCitadelUserMsg_QuickResponse_RespondingToPlayerSlot
}

func (x *CCitadelUserMsg_QuickResponse) GetLaneColor() citadel_gcmessages_common_go.CMsgLaneColor {
	if x != nil && x.LaneColor != nil {
		return *x.LaneColor
	}
	return Default_CCitadelUserMsg_QuickResponse_LaneColor
}

type CCitadelUserMsg_MapLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderPlayerSlot *int32                                    `protobuf:"varint,1,opt,name=sender_player_slot,json=senderPlayerSlot,def=-1" json:"sender_player_slot,omitempty"`
	Mapline          *citadel_gcmessages_common_go.CMsgMapLine `protobuf:"bytes,2,opt,name=mapline" json:"mapline,omitempty"`
}

// Default values for CCitadelUserMsg_MapLine fields.
const (
	Default_CCitadelUserMsg_MapLine_SenderPlayerSlot = int32(-1)
)

func (x *CCitadelUserMsg_MapLine) Reset() {
	*x = CCitadelUserMsg_MapLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_MapLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_MapLine) ProtoMessage() {}

func (x *CCitadelUserMsg_MapLine) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_MapLine.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_MapLine) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{7}
}

func (x *CCitadelUserMsg_MapLine) GetSenderPlayerSlot() int32 {
	if x != nil && x.SenderPlayerSlot != nil {
		return *x.SenderPlayerSlot
	}
	return Default_CCitadelUserMsg_MapLine_SenderPlayerSlot
}

func (x *CCitadelUserMsg_MapLine) GetMapline() *citadel_gcmessages_common_go.CMsgMapLine {
	if x != nil {
		return x.Mapline
	}
	return nil
}

type CCitadelUserMsg_TeamRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xp     *uint32 `protobuf:"varint,1,opt,name=xp" json:"xp,omitempty"`
	Gold   *uint32 `protobuf:"varint,2,opt,name=gold" json:"gold,omitempty"`
	Winner *bool   `protobuf:"varint,3,opt,name=winner" json:"winner,omitempty"`
}

func (x *CCitadelUserMsg_TeamRewards) Reset() {
	*x = CCitadelUserMsg_TeamRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_TeamRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_TeamRewards) ProtoMessage() {}

func (x *CCitadelUserMsg_TeamRewards) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_TeamRewards.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_TeamRewards) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{8}
}

func (x *CCitadelUserMsg_TeamRewards) GetXp() uint32 {
	if x != nil && x.Xp != nil {
		return *x.Xp
	}
	return 0
}

func (x *CCitadelUserMsg_TeamRewards) GetGold() uint32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *CCitadelUserMsg_TeamRewards) GetWinner() bool {
	if x != nil && x.Winner != nil {
		return *x.Winner
	}
	return false
}

type CCitadelUserMsg_TriggerDamageFlash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexFlashVictim   *int32                          `protobuf:"varint,1,opt,name=entindex_flash_victim,json=entindexFlashVictim,def=-1" json:"entindex_flash_victim,omitempty"`
	EntindexFlashAttacker *int32                          `protobuf:"varint,2,opt,name=entindex_flash_attacker,json=entindexFlashAttacker,def=-1" json:"entindex_flash_attacker,omitempty"`
	EntindexFlashHitgroup *int32                          `protobuf:"varint,3,opt,name=entindex_flash_hitgroup,json=entindexFlashHitgroup" json:"entindex_flash_hitgroup,omitempty"`
	FlashValue            *uint32                         `protobuf:"varint,4,opt,name=flash_value,json=flashValue" json:"flash_value,omitempty"`
	FlashType             *uint32                         `protobuf:"varint,5,opt,name=flash_type,json=flashType" json:"flash_type,omitempty"`
	FlashFlags            *uint32                         `protobuf:"varint,6,opt,name=flash_flags,json=flashFlags" json:"flash_flags,omitempty"`
	FlashPosition         *networkbasetypes_go.CMsgVector `protobuf:"bytes,7,opt,name=flash_position,json=flashPosition" json:"flash_position,omitempty"`
}

// Default values for CCitadelUserMsg_TriggerDamageFlash fields.
const (
	Default_CCitadelUserMsg_TriggerDamageFlash_EntindexFlashVictim   = int32(-1)
	Default_CCitadelUserMsg_TriggerDamageFlash_EntindexFlashAttacker = int32(-1)
)

func (x *CCitadelUserMsg_TriggerDamageFlash) Reset() {
	*x = CCitadelUserMsg_TriggerDamageFlash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_TriggerDamageFlash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_TriggerDamageFlash) ProtoMessage() {}

func (x *CCitadelUserMsg_TriggerDamageFlash) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_TriggerDamageFlash.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_TriggerDamageFlash) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{9}
}

func (x *CCitadelUserMsg_TriggerDamageFlash) GetEntindexFlashVictim() int32 {
	if x != nil && x.EntindexFlashVictim != nil {
		return *x.EntindexFlashVictim
	}
	return Default_CCitadelUserMsg_TriggerDamageFlash_EntindexFlashVictim
}

func (x *CCitadelUserMsg_TriggerDamageFlash) GetEntindexFlashAttacker() int32 {
	if x != nil && x.EntindexFlashAttacker != nil {
		return *x.EntindexFlashAttacker
	}
	return Default_CCitadelUserMsg_TriggerDamageFlash_EntindexFlashAttacker
}

func (x *CCitadelUserMsg_TriggerDamageFlash) GetEntindexFlashHitgroup() int32 {
	if x != nil && x.EntindexFlashHitgroup != nil {
		return *x.EntindexFlashHitgroup
	}
	return 0
}

func (x *CCitadelUserMsg_TriggerDamageFlash) GetFlashValue() uint32 {
	if x != nil && x.FlashValue != nil {
		return *x.FlashValue
	}
	return 0
}

func (x *CCitadelUserMsg_TriggerDamageFlash) GetFlashType() uint32 {
	if x != nil && x.FlashType != nil {
		return *x.FlashType
	}
	return 0
}

func (x *CCitadelUserMsg_TriggerDamageFlash) GetFlashFlags() uint32 {
	if x != nil && x.FlashFlags != nil {
		return *x.FlashFlags
	}
	return 0
}

func (x *CCitadelUserMsg_TriggerDamageFlash) GetFlashPosition() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.FlashPosition
	}
	return nil
}

type CCitadelUserMsg_AbilitiesChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexPurchaser *int32                                   `protobuf:"varint,1,opt,name=entindex_purchaser,json=entindexPurchaser,def=-1" json:"entindex_purchaser,omitempty"`
	EntindexAbility   *int32                                   `protobuf:"varint,2,opt,name=entindex_ability,json=entindexAbility,def=-1" json:"entindex_ability,omitempty"`
	AbilityId         *uint32                                  `protobuf:"varint,3,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	Change            *CCitadelUserMsg_AbilitiesChanged_Change `protobuf:"varint,4,opt,name=change,enum=CCitadelUserMsg_AbilitiesChanged_Change,def=-1" json:"change,omitempty"`
}

// Default values for CCitadelUserMsg_AbilitiesChanged fields.
const (
	Default_CCitadelUserMsg_AbilitiesChanged_EntindexPurchaser = int32(-1)
	Default_CCitadelUserMsg_AbilitiesChanged_EntindexAbility   = int32(-1)
	Default_CCitadelUserMsg_AbilitiesChanged_Change            = CCitadelUserMsg_AbilitiesChanged_EInvalid
)

func (x *CCitadelUserMsg_AbilitiesChanged) Reset() {
	*x = CCitadelUserMsg_AbilitiesChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_AbilitiesChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_AbilitiesChanged) ProtoMessage() {}

func (x *CCitadelUserMsg_AbilitiesChanged) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_AbilitiesChanged.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_AbilitiesChanged) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{10}
}

func (x *CCitadelUserMsg_AbilitiesChanged) GetEntindexPurchaser() int32 {
	if x != nil && x.EntindexPurchaser != nil {
		return *x.EntindexPurchaser
	}
	return Default_CCitadelUserMsg_AbilitiesChanged_EntindexPurchaser
}

func (x *CCitadelUserMsg_AbilitiesChanged) GetEntindexAbility() int32 {
	if x != nil && x.EntindexAbility != nil {
		return *x.EntindexAbility
	}
	return Default_CCitadelUserMsg_AbilitiesChanged_EntindexAbility
}

func (x *CCitadelUserMsg_AbilitiesChanged) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *CCitadelUserMsg_AbilitiesChanged) GetChange() CCitadelUserMsg_AbilitiesChanged_Change {
	if x != nil && x.Change != nil {
		return *x.Change
	}
	return Default_CCitadelUserMsg_AbilitiesChanged_Change
}

type CCitadelUserMsg_AbilityInterrupted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexVictim       *int32  `protobuf:"varint,1,opt,name=entindex_victim,json=entindexVictim,def=-1" json:"entindex_victim,omitempty"`
	EntindexInterrupter  *int32  `protobuf:"varint,2,opt,name=entindex_interrupter,json=entindexInterrupter,def=-1" json:"entindex_interrupter,omitempty"`
	AbilityIdInterrupted *uint32 `protobuf:"varint,3,opt,name=ability_id_interrupted,json=abilityIdInterrupted" json:"ability_id_interrupted,omitempty"`
	AbilityIdInterrupter *uint32 `protobuf:"varint,4,opt,name=ability_id_interrupter,json=abilityIdInterrupter" json:"ability_id_interrupter,omitempty"`
	HeroIdInterrupter    *uint32 `protobuf:"varint,5,opt,name=hero_id_interrupter,json=heroIdInterrupter" json:"hero_id_interrupter,omitempty"`
}

// Default values for CCitadelUserMsg_AbilityInterrupted fields.
const (
	Default_CCitadelUserMsg_AbilityInterrupted_EntindexVictim      = int32(-1)
	Default_CCitadelUserMsg_AbilityInterrupted_EntindexInterrupter = int32(-1)
)

func (x *CCitadelUserMsg_AbilityInterrupted) Reset() {
	*x = CCitadelUserMsg_AbilityInterrupted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_AbilityInterrupted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_AbilityInterrupted) ProtoMessage() {}

func (x *CCitadelUserMsg_AbilityInterrupted) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_AbilityInterrupted.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_AbilityInterrupted) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{11}
}

func (x *CCitadelUserMsg_AbilityInterrupted) GetEntindexVictim() int32 {
	if x != nil && x.EntindexVictim != nil {
		return *x.EntindexVictim
	}
	return Default_CCitadelUserMsg_AbilityInterrupted_EntindexVictim
}

func (x *CCitadelUserMsg_AbilityInterrupted) GetEntindexInterrupter() int32 {
	if x != nil && x.EntindexInterrupter != nil {
		return *x.EntindexInterrupter
	}
	return Default_CCitadelUserMsg_AbilityInterrupted_EntindexInterrupter
}

func (x *CCitadelUserMsg_AbilityInterrupted) GetAbilityIdInterrupted() uint32 {
	if x != nil && x.AbilityIdInterrupted != nil {
		return *x.AbilityIdInterrupted
	}
	return 0
}

func (x *CCitadelUserMsg_AbilityInterrupted) GetAbilityIdInterrupter() uint32 {
	if x != nil && x.AbilityIdInterrupter != nil {
		return *x.AbilityIdInterrupter
	}
	return 0
}

func (x *CCitadelUserMsg_AbilityInterrupted) GetHeroIdInterrupter() uint32 {
	if x != nil && x.HeroIdInterrupter != nil {
		return *x.HeroIdInterrupter
	}
	return 0
}

type CCitadelUserMsg_AbilityLateFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexCaster  *int32  `protobuf:"varint,1,opt,name=entindex_caster,json=entindexCaster,def=-1" json:"entindex_caster,omitempty"`
	EntindexAbility *int32  `protobuf:"varint,2,opt,name=entindex_ability,json=entindexAbility,def=-1" json:"entindex_ability,omitempty"`
	FailureType     *uint32 `protobuf:"varint,3,opt,name=failure_type,json=failureType" json:"failure_type,omitempty"`
}

// Default values for CCitadelUserMsg_AbilityLateFailure fields.
const (
	Default_CCitadelUserMsg_AbilityLateFailure_EntindexCaster  = int32(-1)
	Default_CCitadelUserMsg_AbilityLateFailure_EntindexAbility = int32(-1)
)

func (x *CCitadelUserMsg_AbilityLateFailure) Reset() {
	*x = CCitadelUserMsg_AbilityLateFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_AbilityLateFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_AbilityLateFailure) ProtoMessage() {}

func (x *CCitadelUserMsg_AbilityLateFailure) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_AbilityLateFailure.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_AbilityLateFailure) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{12}
}

func (x *CCitadelUserMsg_AbilityLateFailure) GetEntindexCaster() int32 {
	if x != nil && x.EntindexCaster != nil {
		return *x.EntindexCaster
	}
	return Default_CCitadelUserMsg_AbilityLateFailure_EntindexCaster
}

func (x *CCitadelUserMsg_AbilityLateFailure) GetEntindexAbility() int32 {
	if x != nil && x.EntindexAbility != nil {
		return *x.EntindexAbility
	}
	return Default_CCitadelUserMsg_AbilityLateFailure_EntindexAbility
}

func (x *CCitadelUserMsg_AbilityLateFailure) GetFailureType() uint32 {
	if x != nil && x.FailureType != nil {
		return *x.FailureType
	}
	return 0
}

type CCitadelUserMsg_RecentDamageSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSlot      *int32                                                `protobuf:"varint,1,opt,name=player_slot,json=playerSlot,def=-1" json:"player_slot,omitempty"`
	DamageRecords   []*CCitadelUserMsg_RecentDamageSummary_DamageRecord   `protobuf:"bytes,2,rep,name=damage_records,json=damageRecords" json:"damage_records,omitempty"`
	StartTime       *float32                                              `protobuf:"fixed32,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime         *float32                                              `protobuf:"fixed32,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	TotalDamage     *int32                                                `protobuf:"varint,5,opt,name=total_damage,json=totalDamage" json:"total_damage,omitempty"`
	LostGold        *int32                                                `protobuf:"varint,6,opt,name=lost_gold,json=lostGold" json:"lost_gold,omitempty"`
	ModifierRecords []*CCitadelUserMsg_RecentDamageSummary_ModifierRecord `protobuf:"bytes,7,rep,name=modifier_records,json=modifierRecords" json:"modifier_records,omitempty"`
}

// Default values for CCitadelUserMsg_RecentDamageSummary fields.
const (
	Default_CCitadelUserMsg_RecentDamageSummary_PlayerSlot = int32(-1)
)

func (x *CCitadelUserMsg_RecentDamageSummary) Reset() {
	*x = CCitadelUserMsg_RecentDamageSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_RecentDamageSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_RecentDamageSummary) ProtoMessage() {}

func (x *CCitadelUserMsg_RecentDamageSummary) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_RecentDamageSummary.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_RecentDamageSummary) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{13}
}

func (x *CCitadelUserMsg_RecentDamageSummary) GetPlayerSlot() int32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return Default_CCitadelUserMsg_RecentDamageSummary_PlayerSlot
}

func (x *CCitadelUserMsg_RecentDamageSummary) GetDamageRecords() []*CCitadelUserMsg_RecentDamageSummary_DamageRecord {
	if x != nil {
		return x.DamageRecords
	}
	return nil
}

func (x *CCitadelUserMsg_RecentDamageSummary) GetStartTime() float32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary) GetEndTime() float32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary) GetTotalDamage() int32 {
	if x != nil && x.TotalDamage != nil {
		return *x.TotalDamage
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary) GetLostGold() int32 {
	if x != nil && x.LostGold != nil {
		return *x.LostGold
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary) GetModifierRecords() []*CCitadelUserMsg_RecentDamageSummary_ModifierRecord {
	if x != nil {
		return x.ModifierRecords
	}
	return nil
}

type CCitadelUserMsg_SpectatorTeamChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teamnumber *int32 `protobuf:"varint,1,opt,name=teamnumber" json:"teamnumber,omitempty"`
}

func (x *CCitadelUserMsg_SpectatorTeamChanged) Reset() {
	*x = CCitadelUserMsg_SpectatorTeamChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_SpectatorTeamChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_SpectatorTeamChanged) ProtoMessage() {}

func (x *CCitadelUserMsg_SpectatorTeamChanged) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_SpectatorTeamChanged.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_SpectatorTeamChanged) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{14}
}

func (x *CCitadelUserMsg_SpectatorTeamChanged) GetTeamnumber() int32 {
	if x != nil && x.Teamnumber != nil {
		return *x.Teamnumber
	}
	return 0
}

type CCitadelUserMsg_ChatWheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatMessageId *uint32                                     `protobuf:"varint,1,opt,name=chat_message_id,json=chatMessageId" json:"chat_message_id,omitempty"`
	PlayerSlot    *int32                                      `protobuf:"varint,2,opt,name=player_slot,json=playerSlot,def=-1" json:"player_slot,omitempty"`
	PawnEntindex  *int32                                      `protobuf:"varint,3,opt,name=pawn_entindex,json=pawnEntindex,def=-1" json:"pawn_entindex,omitempty"`
	AccountId     *uint32                                     `protobuf:"varint,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId        *uint32                                     `protobuf:"varint,5,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Param_1       *string                                     `protobuf:"bytes,6,opt,name=param_1,json=param1" json:"param_1,omitempty"`
	LaneColor     *citadel_gcmessages_common_go.CMsgLaneColor `protobuf:"varint,7,opt,name=lane_color,json=laneColor,enum=CMsgLaneColor,def=0" json:"lane_color,omitempty"`
}

// Default values for CCitadelUserMsg_ChatWheel fields.
const (
	Default_CCitadelUserMsg_ChatWheel_PlayerSlot   = int32(-1)
	Default_CCitadelUserMsg_ChatWheel_PawnEntindex = int32(-1)
	Default_CCitadelUserMsg_ChatWheel_LaneColor    = citadel_gcmessages_common_go.CMsgLaneColor(0) // citadel_gcmessages_common_go.CMsgLaneColor_k_ELaneColor_Invalid
)

func (x *CCitadelUserMsg_ChatWheel) Reset() {
	*x = CCitadelUserMsg_ChatWheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ChatWheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ChatWheel) ProtoMessage() {}

func (x *CCitadelUserMsg_ChatWheel) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ChatWheel.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ChatWheel) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{15}
}

func (x *CCitadelUserMsg_ChatWheel) GetChatMessageId() uint32 {
	if x != nil && x.ChatMessageId != nil {
		return *x.ChatMessageId
	}
	return 0
}

func (x *CCitadelUserMsg_ChatWheel) GetPlayerSlot() int32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return Default_CCitadelUserMsg_ChatWheel_PlayerSlot
}

func (x *CCitadelUserMsg_ChatWheel) GetPawnEntindex() int32 {
	if x != nil && x.PawnEntindex != nil {
		return *x.PawnEntindex
	}
	return Default_CCitadelUserMsg_ChatWheel_PawnEntindex
}

func (x *CCitadelUserMsg_ChatWheel) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CCitadelUserMsg_ChatWheel) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CCitadelUserMsg_ChatWheel) GetParam_1() string {
	if x != nil && x.Param_1 != nil {
		return *x.Param_1
	}
	return ""
}

func (x *CCitadelUserMsg_ChatWheel) GetLaneColor() citadel_gcmessages_common_go.CMsgLaneColor {
	if x != nil && x.LaneColor != nil {
		return *x.LaneColor
	}
	return Default_CCitadelUserMsg_ChatWheel_LaneColor
}

type CCitadelUserMsg_ChatMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSlot *int32                                      `protobuf:"varint,1,opt,name=player_slot,json=playerSlot,def=-1" json:"player_slot,omitempty"`
	Text       *string                                     `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	AllChat    *bool                                       `protobuf:"varint,3,opt,name=all_chat,json=allChat" json:"all_chat,omitempty"`
	LaneColor  *citadel_gcmessages_common_go.CMsgLaneColor `protobuf:"varint,4,opt,name=lane_color,json=laneColor,enum=CMsgLaneColor,def=0" json:"lane_color,omitempty"`
}

// Default values for CCitadelUserMsg_ChatMsg fields.
const (
	Default_CCitadelUserMsg_ChatMsg_PlayerSlot = int32(-1)
	Default_CCitadelUserMsg_ChatMsg_LaneColor  = citadel_gcmessages_common_go.CMsgLaneColor(0) // citadel_gcmessages_common_go.CMsgLaneColor_k_ELaneColor_Invalid
)

func (x *CCitadelUserMsg_ChatMsg) Reset() {
	*x = CCitadelUserMsg_ChatMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ChatMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ChatMsg) ProtoMessage() {}

func (x *CCitadelUserMsg_ChatMsg) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ChatMsg.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ChatMsg) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{16}
}

func (x *CCitadelUserMsg_ChatMsg) GetPlayerSlot() int32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return Default_CCitadelUserMsg_ChatMsg_PlayerSlot
}

func (x *CCitadelUserMsg_ChatMsg) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *CCitadelUserMsg_ChatMsg) GetAllChat() bool {
	if x != nil && x.AllChat != nil {
		return *x.AllChat
	}
	return false
}

func (x *CCitadelUserMsg_ChatMsg) GetLaneColor() citadel_gcmessages_common_go.CMsgLaneColor {
	if x != nil && x.LaneColor != nil {
		return *x.LaneColor
	}
	return Default_CCitadelUserMsg_ChatMsg_LaneColor
}

type CCitadelUserMsg_GoldHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexPlayer *int32                                      `protobuf:"varint,1,opt,name=entindex_player,json=entindexPlayer,def=-1" json:"entindex_player,omitempty"`
	MinuteRecords  []*CCitadelUserMsg_GoldHistory_MinuteRecord `protobuf:"bytes,2,rep,name=minute_records,json=minuteRecords" json:"minute_records,omitempty"`
}

// Default values for CCitadelUserMsg_GoldHistory fields.
const (
	Default_CCitadelUserMsg_GoldHistory_EntindexPlayer = int32(-1)
)

func (x *CCitadelUserMsg_GoldHistory) Reset() {
	*x = CCitadelUserMsg_GoldHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_GoldHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_GoldHistory) ProtoMessage() {}

func (x *CCitadelUserMsg_GoldHistory) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_GoldHistory.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_GoldHistory) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{17}
}

func (x *CCitadelUserMsg_GoldHistory) GetEntindexPlayer() int32 {
	if x != nil && x.EntindexPlayer != nil {
		return *x.EntindexPlayer
	}
	return Default_CCitadelUserMsg_GoldHistory_EntindexPlayer
}

func (x *CCitadelUserMsg_GoldHistory) GetMinuteRecords() []*CCitadelUserMsg_GoldHistory_MinuteRecord {
	if x != nil {
		return x.MinuteRecords
	}
	return nil
}

type CCitadelUserMsg_CameraController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action          *CameraAction                              `protobuf:"varint,1,req,name=action,enum=CameraAction,def=0" json:"action,omitempty"`
	Operation       *CameraOperation                           `protobuf:"varint,2,opt,name=operation,enum=CameraOperation,def=2" json:"operation,omitempty"`
	Param           *CameraParam                               `protobuf:"varint,3,opt,name=param,enum=CameraParam,def=0" json:"param,omitempty"`
	Delay           *float32                                   `protobuf:"fixed32,4,opt,name=delay" json:"delay,omitempty"`
	RelativeValues  *bool                                      `protobuf:"varint,11,opt,name=relative_values,json=relativeValues" json:"relative_values,omitempty"`
	ContextSymbolId *uint32                                    `protobuf:"varint,5,opt,name=context_symbol_id,json=contextSymbolId" json:"context_symbol_id,omitempty"`
	Maintain        *CCitadelUserMsg_CameraController_Maintain `protobuf:"bytes,6,opt,name=maintain" json:"maintain,omitempty"`
	Approach        *CCitadelUserMsg_CameraController_Approach `protobuf:"bytes,7,opt,name=approach" json:"approach,omitempty"`
	Spring          *CCitadelUserMsg_CameraController_Spring   `protobuf:"bytes,8,opt,name=spring" json:"spring,omitempty"`
	Lerp            *CCitadelUserMsg_CameraController_Lerp     `protobuf:"bytes,9,opt,name=lerp" json:"lerp,omitempty"`
	Lag             *CCitadelUserMsg_CameraController_Lag      `protobuf:"bytes,10,opt,name=lag" json:"lag,omitempty"`
}

// Default values for CCitadelUserMsg_CameraController fields.
const (
	Default_CCitadelUserMsg_CameraController_Action    = CameraAction_k_EAction_AddOp
	Default_CCitadelUserMsg_CameraController_Operation = CameraOperation_k_ECameraOp_Maintain
	Default_CCitadelUserMsg_CameraController_Param     = CameraParam_k_EParam_ClearAllOps
)

func (x *CCitadelUserMsg_CameraController) Reset() {
	*x = CCitadelUserMsg_CameraController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_CameraController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_CameraController) ProtoMessage() {}

func (x *CCitadelUserMsg_CameraController) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_CameraController.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_CameraController) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{18}
}

func (x *CCitadelUserMsg_CameraController) GetAction() CameraAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return Default_CCitadelUserMsg_CameraController_Action
}

func (x *CCitadelUserMsg_CameraController) GetOperation() CameraOperation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return Default_CCitadelUserMsg_CameraController_Operation
}

func (x *CCitadelUserMsg_CameraController) GetParam() CameraParam {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return Default_CCitadelUserMsg_CameraController_Param
}

func (x *CCitadelUserMsg_CameraController) GetDelay() float32 {
	if x != nil && x.Delay != nil {
		return *x.Delay
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController) GetRelativeValues() bool {
	if x != nil && x.RelativeValues != nil {
		return *x.RelativeValues
	}
	return false
}

func (x *CCitadelUserMsg_CameraController) GetContextSymbolId() uint32 {
	if x != nil && x.ContextSymbolId != nil {
		return *x.ContextSymbolId
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController) GetMaintain() *CCitadelUserMsg_CameraController_Maintain {
	if x != nil {
		return x.Maintain
	}
	return nil
}

func (x *CCitadelUserMsg_CameraController) GetApproach() *CCitadelUserMsg_CameraController_Approach {
	if x != nil {
		return x.Approach
	}
	return nil
}

func (x *CCitadelUserMsg_CameraController) GetSpring() *CCitadelUserMsg_CameraController_Spring {
	if x != nil {
		return x.Spring
	}
	return nil
}

func (x *CCitadelUserMsg_CameraController) GetLerp() *CCitadelUserMsg_CameraController_Lerp {
	if x != nil {
		return x.Lerp
	}
	return nil
}

func (x *CCitadelUserMsg_CameraController) GetLag() *CCitadelUserMsg_CameraController_Lag {
	if x != nil {
		return x.Lag
	}
	return nil
}

type CCitadelUserMsg_PostMatchDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchDetails []byte `protobuf:"bytes,1,opt,name=match_details,json=matchDetails" json:"match_details,omitempty"`
}

func (x *CCitadelUserMsg_PostMatchDetails) Reset() {
	*x = CCitadelUserMsg_PostMatchDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_PostMatchDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_PostMatchDetails) ProtoMessage() {}

func (x *CCitadelUserMsg_PostMatchDetails) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_PostMatchDetails.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_PostMatchDetails) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{19}
}

func (x *CCitadelUserMsg_PostMatchDetails) GetMatchDetails() []byte {
	if x != nil {
		return x.MatchDetails
	}
	return nil
}

type CCitadelUserMsg_ChatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *ECitadelChatMessage `protobuf:"varint,1,opt,name=type,enum=ECitadelChatMessage,def=1" json:"type,omitempty"`
	Values      []uint32             `protobuf:"varint,2,rep,name=values" json:"values,omitempty"`
	PlayerSlots []int32              `protobuf:"varint,3,rep,name=player_slots,json=playerSlots" json:"player_slots,omitempty"`
}

// Default values for CCitadelUserMsg_ChatEvent fields.
const (
	Default_CCitadelUserMsg_ChatEvent_Type = ECitadelChatMessage_CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN
)

func (x *CCitadelUserMsg_ChatEvent) Reset() {
	*x = CCitadelUserMsg_ChatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ChatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ChatEvent) ProtoMessage() {}

func (x *CCitadelUserMsg_ChatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ChatEvent.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ChatEvent) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{20}
}

func (x *CCitadelUserMsg_ChatEvent) GetType() ECitadelChatMessage {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_CCitadelUserMsg_ChatEvent_Type
}

func (x *CCitadelUserMsg_ChatEvent) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *CCitadelUserMsg_ChatEvent) GetPlayerSlots() []int32 {
	if x != nil {
		return x.PlayerSlots
	}
	return nil
}

type CCitadelUserMsg_HeroKilled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexVictim    *int32  `protobuf:"varint,1,opt,name=entindex_victim,json=entindexVictim,def=-1" json:"entindex_victim,omitempty"`
	EntindexInflictor *int32  `protobuf:"varint,2,opt,name=entindex_inflictor,json=entindexInflictor,def=-1" json:"entindex_inflictor,omitempty"`
	EntindexAttacker  *int32  `protobuf:"varint,3,opt,name=entindex_attacker,json=entindexAttacker,def=-1" json:"entindex_attacker,omitempty"`
	EntindexAssisters []int32 `protobuf:"varint,4,rep,name=entindex_assisters,json=entindexAssisters" json:"entindex_assisters,omitempty"`
	EntindexScorer    *int32  `protobuf:"varint,5,opt,name=entindex_scorer,json=entindexScorer,def=-1" json:"entindex_scorer,omitempty"`
	RespawnReason     *int32  `protobuf:"varint,6,opt,name=respawn_reason,json=respawnReason" json:"respawn_reason,omitempty"`
}

// Default values for CCitadelUserMsg_HeroKilled fields.
const (
	Default_CCitadelUserMsg_HeroKilled_EntindexVictim    = int32(-1)
	Default_CCitadelUserMsg_HeroKilled_EntindexInflictor = int32(-1)
	Default_CCitadelUserMsg_HeroKilled_EntindexAttacker  = int32(-1)
	Default_CCitadelUserMsg_HeroKilled_EntindexScorer    = int32(-1)
)

func (x *CCitadelUserMsg_HeroKilled) Reset() {
	*x = CCitadelUserMsg_HeroKilled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_HeroKilled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_HeroKilled) ProtoMessage() {}

func (x *CCitadelUserMsg_HeroKilled) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_HeroKilled.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_HeroKilled) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{21}
}

func (x *CCitadelUserMsg_HeroKilled) GetEntindexVictim() int32 {
	if x != nil && x.EntindexVictim != nil {
		return *x.EntindexVictim
	}
	return Default_CCitadelUserMsg_HeroKilled_EntindexVictim
}

func (x *CCitadelUserMsg_HeroKilled) GetEntindexInflictor() int32 {
	if x != nil && x.EntindexInflictor != nil {
		return *x.EntindexInflictor
	}
	return Default_CCitadelUserMsg_HeroKilled_EntindexInflictor
}

func (x *CCitadelUserMsg_HeroKilled) GetEntindexAttacker() int32 {
	if x != nil && x.EntindexAttacker != nil {
		return *x.EntindexAttacker
	}
	return Default_CCitadelUserMsg_HeroKilled_EntindexAttacker
}

func (x *CCitadelUserMsg_HeroKilled) GetEntindexAssisters() []int32 {
	if x != nil {
		return x.EntindexAssisters
	}
	return nil
}

func (x *CCitadelUserMsg_HeroKilled) GetEntindexScorer() int32 {
	if x != nil && x.EntindexScorer != nil {
		return *x.EntindexScorer
	}
	return Default_CCitadelUserMsg_HeroKilled_EntindexScorer
}

func (x *CCitadelUserMsg_HeroKilled) GetRespawnReason() int32 {
	if x != nil && x.RespawnReason != nil {
		return *x.RespawnReason
	}
	return 0
}

type CCitadelEntityMsg_BreakablePropSpawnDebris struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityMsg *networkbasetypes_go.CEntityMsg `protobuf:"bytes,1,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
	DamagePos *networkbasetypes_go.CMsgVector `protobuf:"bytes,2,opt,name=damage_pos,json=damagePos" json:"damage_pos,omitempty"`
	Damage    *float32                        `protobuf:"fixed32,3,opt,name=damage" json:"damage,omitempty"`
}

func (x *CCitadelEntityMsg_BreakablePropSpawnDebris) Reset() {
	*x = CCitadelEntityMsg_BreakablePropSpawnDebris{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelEntityMsg_BreakablePropSpawnDebris) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelEntityMsg_BreakablePropSpawnDebris) ProtoMessage() {}

func (x *CCitadelEntityMsg_BreakablePropSpawnDebris) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelEntityMsg_BreakablePropSpawnDebris.ProtoReflect.Descriptor instead.
func (*CCitadelEntityMsg_BreakablePropSpawnDebris) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{22}
}

func (x *CCitadelEntityMsg_BreakablePropSpawnDebris) GetEntityMsg() *networkbasetypes_go.CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

func (x *CCitadelEntityMsg_BreakablePropSpawnDebris) GetDamagePos() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.DamagePos
	}
	return nil
}

func (x *CCitadelEntityMsg_BreakablePropSpawnDebris) GetDamage() float32 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

type CCitadelUserMsg_ReturnIdol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationIndex   *int32                          `protobuf:"varint,1,opt,name=location_index,json=locationIndex" json:"location_index,omitempty"`
	ReturnLocation  *networkbasetypes_go.CMsgVector `protobuf:"bytes,2,opt,name=return_location,json=returnLocation" json:"return_location,omitempty"`
	LocationEnabled *bool                           `protobuf:"varint,3,opt,name=location_enabled,json=locationEnabled" json:"location_enabled,omitempty"`
}

func (x *CCitadelUserMsg_ReturnIdol) Reset() {
	*x = CCitadelUserMsg_ReturnIdol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ReturnIdol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ReturnIdol) ProtoMessage() {}

func (x *CCitadelUserMsg_ReturnIdol) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ReturnIdol.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ReturnIdol) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{23}
}

func (x *CCitadelUserMsg_ReturnIdol) GetLocationIndex() int32 {
	if x != nil && x.LocationIndex != nil {
		return *x.LocationIndex
	}
	return 0
}

func (x *CCitadelUserMsg_ReturnIdol) GetReturnLocation() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.ReturnLocation
	}
	return nil
}

func (x *CCitadelUserMsg_ReturnIdol) GetLocationEnabled() bool {
	if x != nil && x.LocationEnabled != nil {
		return *x.LocationEnabled
	}
	return false
}

type CCitadelUserMsg_SetClientCameraAngles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSlot   *int32                          `protobuf:"varint,1,opt,name=player_slot,json=playerSlot,def=-1" json:"player_slot,omitempty"`
	CameraAngles *networkbasetypes_go.CMsgQAngle `protobuf:"bytes,2,opt,name=camera_angles,json=cameraAngles" json:"camera_angles,omitempty"`
}

// Default values for CCitadelUserMsg_SetClientCameraAngles fields.
const (
	Default_CCitadelUserMsg_SetClientCameraAngles_PlayerSlot = int32(-1)
)

func (x *CCitadelUserMsg_SetClientCameraAngles) Reset() {
	*x = CCitadelUserMsg_SetClientCameraAngles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_SetClientCameraAngles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_SetClientCameraAngles) ProtoMessage() {}

func (x *CCitadelUserMsg_SetClientCameraAngles) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_SetClientCameraAngles.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_SetClientCameraAngles) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{24}
}

func (x *CCitadelUserMsg_SetClientCameraAngles) GetPlayerSlot() int32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return Default_CCitadelUserMsg_SetClientCameraAngles_PlayerSlot
}

func (x *CCitadelUserMsg_SetClientCameraAngles) GetCameraAngles() *networkbasetypes_go.CMsgQAngle {
	if x != nil {
		return x.CameraAngles
	}
	return nil
}

type CCitadelUserMessage_BulletHit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shotid      *int32 `protobuf:"varint,1,opt,name=shotid" json:"shotid,omitempty"`
	Pellet      *int32 `protobuf:"varint,2,opt,name=pellet" json:"pellet,omitempty"`
	HitEntindex *int32 `protobuf:"varint,3,opt,name=hit_entindex,json=hitEntindex,def=-1" json:"hit_entindex,omitempty"`
}

// Default values for CCitadelUserMessage_BulletHit fields.
const (
	Default_CCitadelUserMessage_BulletHit_HitEntindex = int32(-1)
)

func (x *CCitadelUserMessage_BulletHit) Reset() {
	*x = CCitadelUserMessage_BulletHit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_BulletHit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_BulletHit) ProtoMessage() {}

func (x *CCitadelUserMessage_BulletHit) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_BulletHit.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_BulletHit) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{25}
}

func (x *CCitadelUserMessage_BulletHit) GetShotid() int32 {
	if x != nil && x.Shotid != nil {
		return *x.Shotid
	}
	return 0
}

func (x *CCitadelUserMessage_BulletHit) GetPellet() int32 {
	if x != nil && x.Pellet != nil {
		return *x.Pellet
	}
	return 0
}

func (x *CCitadelUserMessage_BulletHit) GetHitEntindex() int32 {
	if x != nil && x.HitEntindex != nil {
		return *x.HitEntindex
	}
	return Default_CCitadelUserMessage_BulletHit_HitEntindex
}

type CCitadelUserMessage_ObjectiveMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectiveMaskTeam0 *uint64 `protobuf:"varint,2,opt,name=objective_mask_team0,json=objectiveMaskTeam0" json:"objective_mask_team0,omitempty"`
	ObjectiveMaskTeam1 *uint64 `protobuf:"varint,3,opt,name=objective_mask_team1,json=objectiveMaskTeam1" json:"objective_mask_team1,omitempty"`
}

func (x *CCitadelUserMessage_ObjectiveMask) Reset() {
	*x = CCitadelUserMessage_ObjectiveMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_ObjectiveMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_ObjectiveMask) ProtoMessage() {}

func (x *CCitadelUserMessage_ObjectiveMask) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_ObjectiveMask.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_ObjectiveMask) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{26}
}

func (x *CCitadelUserMessage_ObjectiveMask) GetObjectiveMaskTeam0() uint64 {
	if x != nil && x.ObjectiveMaskTeam0 != nil {
		return *x.ObjectiveMaskTeam0
	}
	return 0
}

func (x *CCitadelUserMessage_ObjectiveMask) GetObjectiveMaskTeam1() uint64 {
	if x != nil && x.ObjectiveMaskTeam1 != nil {
		return *x.ObjectiveMaskTeam1
	}
	return 0
}

type CCitadelUserMessage_ModifierApplied struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexCaster *int32 `protobuf:"varint,1,opt,name=entindex_caster,json=entindexCaster,def=-1" json:"entindex_caster,omitempty"`
	EntindexParent *int32 `protobuf:"varint,2,opt,name=entindex_parent,json=entindexParent,def=-1" json:"entindex_parent,omitempty"`
	SerialNumber   *int32 `protobuf:"varint,3,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
}

// Default values for CCitadelUserMessage_ModifierApplied fields.
const (
	Default_CCitadelUserMessage_ModifierApplied_EntindexCaster = int32(-1)
	Default_CCitadelUserMessage_ModifierApplied_EntindexParent = int32(-1)
)

func (x *CCitadelUserMessage_ModifierApplied) Reset() {
	*x = CCitadelUserMessage_ModifierApplied{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_ModifierApplied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_ModifierApplied) ProtoMessage() {}

func (x *CCitadelUserMessage_ModifierApplied) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_ModifierApplied.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_ModifierApplied) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{27}
}

func (x *CCitadelUserMessage_ModifierApplied) GetEntindexCaster() int32 {
	if x != nil && x.EntindexCaster != nil {
		return *x.EntindexCaster
	}
	return Default_CCitadelUserMessage_ModifierApplied_EntindexCaster
}

func (x *CCitadelUserMessage_ModifierApplied) GetEntindexParent() int32 {
	if x != nil && x.EntindexParent != nil {
		return *x.EntindexParent
	}
	return Default_CCitadelUserMessage_ModifierApplied_EntindexParent
}

func (x *CCitadelUserMessage_ModifierApplied) GetSerialNumber() int32 {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return 0
}

type CCitadelUserMessage_AuraModifierApplied struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexCaster       *int32   `protobuf:"varint,1,opt,name=entindex_caster,json=entindexCaster,def=-1" json:"entindex_caster,omitempty"`
	EntindexTarget       *int32   `protobuf:"varint,2,opt,name=entindex_target,json=entindexTarget,def=-1" json:"entindex_target,omitempty"`
	ModifierTypeId       *uint32  `protobuf:"varint,3,opt,name=modifier_type_id,json=modifierTypeId" json:"modifier_type_id,omitempty"`
	ModifierSerialNumber *int32   `protobuf:"varint,4,opt,name=modifier_serial_number,json=modifierSerialNumber" json:"modifier_serial_number,omitempty"`
	AuraStartTime        *float32 `protobuf:"fixed32,5,opt,name=aura_start_time,json=auraStartTime" json:"aura_start_time,omitempty"`
	AuraEndTime          *float32 `protobuf:"fixed32,6,opt,name=aura_end_time,json=auraEndTime" json:"aura_end_time,omitempty"`
}

// Default values for CCitadelUserMessage_AuraModifierApplied fields.
const (
	Default_CCitadelUserMessage_AuraModifierApplied_EntindexCaster = int32(-1)
	Default_CCitadelUserMessage_AuraModifierApplied_EntindexTarget = int32(-1)
)

func (x *CCitadelUserMessage_AuraModifierApplied) Reset() {
	*x = CCitadelUserMessage_AuraModifierApplied{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_AuraModifierApplied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_AuraModifierApplied) ProtoMessage() {}

func (x *CCitadelUserMessage_AuraModifierApplied) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_AuraModifierApplied.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_AuraModifierApplied) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{28}
}

func (x *CCitadelUserMessage_AuraModifierApplied) GetEntindexCaster() int32 {
	if x != nil && x.EntindexCaster != nil {
		return *x.EntindexCaster
	}
	return Default_CCitadelUserMessage_AuraModifierApplied_EntindexCaster
}

func (x *CCitadelUserMessage_AuraModifierApplied) GetEntindexTarget() int32 {
	if x != nil && x.EntindexTarget != nil {
		return *x.EntindexTarget
	}
	return Default_CCitadelUserMessage_AuraModifierApplied_EntindexTarget
}

func (x *CCitadelUserMessage_AuraModifierApplied) GetModifierTypeId() uint32 {
	if x != nil && x.ModifierTypeId != nil {
		return *x.ModifierTypeId
	}
	return 0
}

func (x *CCitadelUserMessage_AuraModifierApplied) GetModifierSerialNumber() int32 {
	if x != nil && x.ModifierSerialNumber != nil {
		return *x.ModifierSerialNumber
	}
	return 0
}

func (x *CCitadelUserMessage_AuraModifierApplied) GetAuraStartTime() float32 {
	if x != nil && x.AuraStartTime != nil {
		return *x.AuraStartTime
	}
	return 0
}

func (x *CCitadelUserMessage_AuraModifierApplied) GetAuraEndTime() float32 {
	if x != nil && x.AuraEndTime != nil {
		return *x.AuraEndTime
	}
	return 0
}

type CCitadelUserMsg_ObstructedShotFired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CCitadelUserMsg_ObstructedShotFired) Reset() {
	*x = CCitadelUserMsg_ObstructedShotFired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ObstructedShotFired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ObstructedShotFired) ProtoMessage() {}

func (x *CCitadelUserMsg_ObstructedShotFired) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ObstructedShotFired.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ObstructedShotFired) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{29}
}

type CCitadelUserMsg_PostProcessingAnim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexOwner  *int32                    `protobuf:"varint,1,opt,name=entindex_owner,json=entindexOwner,def=-1" json:"entindex_owner,omitempty"`
	ClearAllStates *bool                     `protobuf:"varint,2,opt,name=clear_all_states,json=clearAllStates" json:"clear_all_states,omitempty"`
	State          *PostProcessingGameStates `protobuf:"varint,3,opt,name=state,enum=PostProcessingGameStates,def=0" json:"state,omitempty"`
	StartTime      *float32                  `protobuf:"fixed32,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FadeInTime     *float32                  `protobuf:"fixed32,5,opt,name=fade_in_time,json=fadeInTime" json:"fade_in_time,omitempty"`
	HoldTime       *float32                  `protobuf:"fixed32,6,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	FadeOutTime    *float32                  `protobuf:"fixed32,7,opt,name=fade_out_time,json=fadeOutTime" json:"fade_out_time,omitempty"`
	Scale          *float32                  `protobuf:"fixed32,8,opt,name=scale" json:"scale,omitempty"`
}

// Default values for CCitadelUserMsg_PostProcessingAnim fields.
const (
	Default_CCitadelUserMsg_PostProcessingAnim_EntindexOwner = int32(-1)
	Default_CCitadelUserMsg_PostProcessingAnim_State         = PostProcessingGameStates_PostProcState_Killed
)

func (x *CCitadelUserMsg_PostProcessingAnim) Reset() {
	*x = CCitadelUserMsg_PostProcessingAnim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_PostProcessingAnim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_PostProcessingAnim) ProtoMessage() {}

func (x *CCitadelUserMsg_PostProcessingAnim) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_PostProcessingAnim.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_PostProcessingAnim) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{30}
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetEntindexOwner() int32 {
	if x != nil && x.EntindexOwner != nil {
		return *x.EntindexOwner
	}
	return Default_CCitadelUserMsg_PostProcessingAnim_EntindexOwner
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetClearAllStates() bool {
	if x != nil && x.ClearAllStates != nil {
		return *x.ClearAllStates
	}
	return false
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetState() PostProcessingGameStates {
	if x != nil && x.State != nil {
		return *x.State
	}
	return Default_CCitadelUserMsg_PostProcessingAnim_State
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetStartTime() float32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetFadeInTime() float32 {
	if x != nil && x.FadeInTime != nil {
		return *x.FadeInTime
	}
	return 0
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetHoldTime() float32 {
	if x != nil && x.HoldTime != nil {
		return *x.HoldTime
	}
	return 0
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetFadeOutTime() float32 {
	if x != nil && x.FadeOutTime != nil {
		return *x.FadeOutTime
	}
	return 0
}

func (x *CCitadelUserMsg_PostProcessingAnim) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

type CCitadelUserMsg_DeathReplayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KillerScorer    *int32                               `protobuf:"varint,1,opt,name=killer_scorer,json=killerScorer,def=-1" json:"killer_scorer,omitempty"`
	KillerInflictor *int32                               `protobuf:"varint,2,opt,name=killer_inflictor,json=killerInflictor,def=-1" json:"killer_inflictor,omitempty"`
	DamageSummary   *CCitadelUserMsg_RecentDamageSummary `protobuf:"bytes,3,opt,name=damage_summary,json=damageSummary" json:"damage_summary,omitempty"`
}

// Default values for CCitadelUserMsg_DeathReplayData fields.
const (
	Default_CCitadelUserMsg_DeathReplayData_KillerScorer    = int32(-1)
	Default_CCitadelUserMsg_DeathReplayData_KillerInflictor = int32(-1)
)

func (x *CCitadelUserMsg_DeathReplayData) Reset() {
	*x = CCitadelUserMsg_DeathReplayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_DeathReplayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_DeathReplayData) ProtoMessage() {}

func (x *CCitadelUserMsg_DeathReplayData) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_DeathReplayData.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_DeathReplayData) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{31}
}

func (x *CCitadelUserMsg_DeathReplayData) GetKillerScorer() int32 {
	if x != nil && x.KillerScorer != nil {
		return *x.KillerScorer
	}
	return Default_CCitadelUserMsg_DeathReplayData_KillerScorer
}

func (x *CCitadelUserMsg_DeathReplayData) GetKillerInflictor() int32 {
	if x != nil && x.KillerInflictor != nil {
		return *x.KillerInflictor
	}
	return Default_CCitadelUserMsg_DeathReplayData_KillerInflictor
}

func (x *CCitadelUserMsg_DeathReplayData) GetDamageSummary() *CCitadelUserMsg_RecentDamageSummary {
	if x != nil {
		return x.DamageSummary
	}
	return nil
}

type CCitadelUserMsg_ForceShopClosed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CCitadelUserMsg_ForceShopClosed) Reset() {
	*x = CCitadelUserMsg_ForceShopClosed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ForceShopClosed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ForceShopClosed) ProtoMessage() {}

func (x *CCitadelUserMsg_ForceShopClosed) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ForceShopClosed.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ForceShopClosed) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{32}
}

type CCitadelUserMsg_PlayerLifetimeStatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats           []*CCitadelUserMsg_PlayerLifetimeStatInfo_Stat `protobuf:"bytes,1,rep,name=stats" json:"stats,omitempty"`
	MatchId         *uint64                                        `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	EndOfMatch      *bool                                          `protobuf:"varint,3,opt,name=end_of_match,json=endOfMatch" json:"end_of_match,omitempty"`
	IsOfficialMatch *bool                                          `protobuf:"varint,4,opt,name=is_official_match,json=isOfficialMatch" json:"is_official_match,omitempty"`
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo) Reset() {
	*x = CCitadelUserMsg_PlayerLifetimeStatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_PlayerLifetimeStatInfo) ProtoMessage() {}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_PlayerLifetimeStatInfo.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_PlayerLifetimeStatInfo) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{33}
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo) GetStats() []*CCitadelUserMsg_PlayerLifetimeStatInfo_Stat {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo) GetEndOfMatch() bool {
	if x != nil && x.EndOfMatch != nil {
		return *x.EndOfMatch
	}
	return false
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo) GetIsOfficialMatch() bool {
	if x != nil && x.IsOfficialMatch != nil {
		return *x.IsOfficialMatch
	}
	return false
}

type CCitadelUserMsg_StaminaDrained struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexVictim *int32 `protobuf:"varint,1,opt,name=entindex_victim,json=entindexVictim,def=-1" json:"entindex_victim,omitempty"`
	StaminaDrained *int32 `protobuf:"varint,2,opt,name=stamina_drained,json=staminaDrained" json:"stamina_drained,omitempty"`
}

// Default values for CCitadelUserMsg_StaminaDrained fields.
const (
	Default_CCitadelUserMsg_StaminaDrained_EntindexVictim = int32(-1)
)

func (x *CCitadelUserMsg_StaminaDrained) Reset() {
	*x = CCitadelUserMsg_StaminaDrained{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_StaminaDrained) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_StaminaDrained) ProtoMessage() {}

func (x *CCitadelUserMsg_StaminaDrained) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_StaminaDrained.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_StaminaDrained) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{34}
}

func (x *CCitadelUserMsg_StaminaDrained) GetEntindexVictim() int32 {
	if x != nil && x.EntindexVictim != nil {
		return *x.EntindexVictim
	}
	return Default_CCitadelUserMsg_StaminaDrained_EntindexVictim
}

func (x *CCitadelUserMsg_StaminaDrained) GetStaminaDrained() int32 {
	if x != nil && x.StaminaDrained != nil {
		return *x.StaminaDrained
	}
	return 0
}

type CCitadelUserMessage_AbilityNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexVictim   *int32  `protobuf:"varint,1,opt,name=entindex_victim,json=entindexVictim,def=-1" json:"entindex_victim,omitempty"`
	EntindexAttacker *int32  `protobuf:"varint,2,opt,name=entindex_attacker,json=entindexAttacker,def=-1" json:"entindex_attacker,omitempty"`
	AbilityId        *uint32 `protobuf:"varint,3,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
}

// Default values for CCitadelUserMessage_AbilityNotify fields.
const (
	Default_CCitadelUserMessage_AbilityNotify_EntindexVictim   = int32(-1)
	Default_CCitadelUserMessage_AbilityNotify_EntindexAttacker = int32(-1)
)

func (x *CCitadelUserMessage_AbilityNotify) Reset() {
	*x = CCitadelUserMessage_AbilityNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_AbilityNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_AbilityNotify) ProtoMessage() {}

func (x *CCitadelUserMessage_AbilityNotify) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_AbilityNotify.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_AbilityNotify) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{35}
}

func (x *CCitadelUserMessage_AbilityNotify) GetEntindexVictim() int32 {
	if x != nil && x.EntindexVictim != nil {
		return *x.EntindexVictim
	}
	return Default_CCitadelUserMessage_AbilityNotify_EntindexVictim
}

func (x *CCitadelUserMessage_AbilityNotify) GetEntindexAttacker() int32 {
	if x != nil && x.EntindexAttacker != nil {
		return *x.EntindexAttacker
	}
	return Default_CCitadelUserMessage_AbilityNotify_EntindexAttacker
}

func (x *CCitadelUserMessage_AbilityNotify) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

type CCitadelUserMessage_CurrencyChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntindexHeroPawn *int32                          `protobuf:"varint,1,opt,name=entindex_hero_pawn,json=entindexHeroPawn,def=-1" json:"entindex_hero_pawn,omitempty"`
	CurrencyType     *int32                          `protobuf:"varint,2,opt,name=currency_type,json=currencyType" json:"currency_type,omitempty"`
	CurrencySource   *int32                          `protobuf:"varint,3,opt,name=currency_source,json=currencySource" json:"currency_source,omitempty"`
	Delta            *int32                          `protobuf:"varint,4,opt,name=delta" json:"delta,omitempty"`
	Notification     *bool                           `protobuf:"varint,5,opt,name=notification" json:"notification,omitempty"`
	EntindexVictim   *int32                          `protobuf:"varint,6,opt,name=entindex_victim,json=entindexVictim,def=-1" json:"entindex_victim,omitempty"`
	VictimPos        *networkbasetypes_go.CMsgVector `protobuf:"bytes,7,opt,name=victim_pos,json=victimPos" json:"victim_pos,omitempty"`
	Playsound        *int32                          `protobuf:"varint,8,opt,name=playsound" json:"playsound,omitempty"`
	AbilityId        *uint32                         `protobuf:"varint,9,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
}

// Default values for CCitadelUserMessage_CurrencyChanged fields.
const (
	Default_CCitadelUserMessage_CurrencyChanged_EntindexHeroPawn = int32(-1)
	Default_CCitadelUserMessage_CurrencyChanged_EntindexVictim   = int32(-1)
)

func (x *CCitadelUserMessage_CurrencyChanged) Reset() {
	*x = CCitadelUserMessage_CurrencyChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_CurrencyChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_CurrencyChanged) ProtoMessage() {}

func (x *CCitadelUserMessage_CurrencyChanged) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_CurrencyChanged.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_CurrencyChanged) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{36}
}

func (x *CCitadelUserMessage_CurrencyChanged) GetEntindexHeroPawn() int32 {
	if x != nil && x.EntindexHeroPawn != nil {
		return *x.EntindexHeroPawn
	}
	return Default_CCitadelUserMessage_CurrencyChanged_EntindexHeroPawn
}

func (x *CCitadelUserMessage_CurrencyChanged) GetCurrencyType() int32 {
	if x != nil && x.CurrencyType != nil {
		return *x.CurrencyType
	}
	return 0
}

func (x *CCitadelUserMessage_CurrencyChanged) GetCurrencySource() int32 {
	if x != nil && x.CurrencySource != nil {
		return *x.CurrencySource
	}
	return 0
}

func (x *CCitadelUserMessage_CurrencyChanged) GetDelta() int32 {
	if x != nil && x.Delta != nil {
		return *x.Delta
	}
	return 0
}

func (x *CCitadelUserMessage_CurrencyChanged) GetNotification() bool {
	if x != nil && x.Notification != nil {
		return *x.Notification
	}
	return false
}

func (x *CCitadelUserMessage_CurrencyChanged) GetEntindexVictim() int32 {
	if x != nil && x.EntindexVictim != nil {
		return *x.EntindexVictim
	}
	return Default_CCitadelUserMessage_CurrencyChanged_EntindexVictim
}

func (x *CCitadelUserMessage_CurrencyChanged) GetVictimPos() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.VictimPos
	}
	return nil
}

func (x *CCitadelUserMessage_CurrencyChanged) GetPlaysound() int32 {
	if x != nil && x.Playsound != nil {
		return *x.Playsound
	}
	return 0
}

func (x *CCitadelUserMessage_CurrencyChanged) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

type CCitadelUserMessage_GameOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinningTeam *int32 `protobuf:"varint,1,opt,name=winning_team,json=winningTeam" json:"winning_team,omitempty"`
	JustATest   *bool  `protobuf:"varint,2,opt,name=just_a_test,json=justATest" json:"just_a_test,omitempty"`
}

func (x *CCitadelUserMessage_GameOver) Reset() {
	*x = CCitadelUserMessage_GameOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMessage_GameOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMessage_GameOver) ProtoMessage() {}

func (x *CCitadelUserMessage_GameOver) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMessage_GameOver.ProtoReflect.Descriptor instead.
func (*CCitadelUserMessage_GameOver) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{37}
}

func (x *CCitadelUserMessage_GameOver) GetWinningTeam() int32 {
	if x != nil && x.WinningTeam != nil {
		return *x.WinningTeam
	}
	return 0
}

func (x *CCitadelUserMessage_GameOver) GetJustATest() bool {
	if x != nil && x.JustATest != nil {
		return *x.JustATest
	}
	return false
}

type CCitadelUserMsg_GetDamageStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSlot  *uint32                                          `protobuf:"varint,1,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	AbilityName *string                                          `protobuf:"bytes,2,opt,name=ability_name,json=abilityName" json:"ability_name,omitempty"`
	Damage      *CCitadelUserMsg_GetDamageStatsResponse_StatType `protobuf:"bytes,3,opt,name=damage" json:"damage,omitempty"`
	Healing     *CCitadelUserMsg_GetDamageStatsResponse_StatType `protobuf:"bytes,4,opt,name=healing" json:"healing,omitempty"`
}

func (x *CCitadelUserMsg_GetDamageStatsResponse) Reset() {
	*x = CCitadelUserMsg_GetDamageStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_GetDamageStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_GetDamageStatsResponse) ProtoMessage() {}

func (x *CCitadelUserMsg_GetDamageStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_GetDamageStatsResponse.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_GetDamageStatsResponse) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{38}
}

func (x *CCitadelUserMsg_GetDamageStatsResponse) GetPlayerSlot() uint32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return 0
}

func (x *CCitadelUserMsg_GetDamageStatsResponse) GetAbilityName() string {
	if x != nil && x.AbilityName != nil {
		return *x.AbilityName
	}
	return ""
}

func (x *CCitadelUserMsg_GetDamageStatsResponse) GetDamage() *CCitadelUserMsg_GetDamageStatsResponse_StatType {
	if x != nil {
		return x.Damage
	}
	return nil
}

func (x *CCitadelUserMsg_GetDamageStatsResponse) GetHealing() *CCitadelUserMsg_GetDamageStatsResponse_StatType {
	if x != nil {
		return x.Healing
	}
	return nil
}

type CCitadelUserMsg_ParticipantStartSoundEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event       *gameevents_go.CMsgSosStartSoundEvent `protobuf:"bytes,1,req,name=event" json:"event,omitempty"`
	PlayerSlots []int32                               `protobuf:"varint,2,rep,name=player_slots,json=playerSlots" json:"player_slots,omitempty"`
}

func (x *CCitadelUserMsg_ParticipantStartSoundEvent) Reset() {
	*x = CCitadelUserMsg_ParticipantStartSoundEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ParticipantStartSoundEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ParticipantStartSoundEvent) ProtoMessage() {}

func (x *CCitadelUserMsg_ParticipantStartSoundEvent) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ParticipantStartSoundEvent.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ParticipantStartSoundEvent) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{39}
}

func (x *CCitadelUserMsg_ParticipantStartSoundEvent) GetEvent() *gameevents_go.CMsgSosStartSoundEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *CCitadelUserMsg_ParticipantStartSoundEvent) GetPlayerSlots() []int32 {
	if x != nil {
		return x.PlayerSlots
	}
	return nil
}

type CCitadelUserMsg_ParticipantStopSoundEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event       *gameevents_go.CMsgSosStopSoundEvent `protobuf:"bytes,1,req,name=event" json:"event,omitempty"`
	PlayerSlots []int32                              `protobuf:"varint,2,rep,name=player_slots,json=playerSlots" json:"player_slots,omitempty"`
}

func (x *CCitadelUserMsg_ParticipantStopSoundEvent) Reset() {
	*x = CCitadelUserMsg_ParticipantStopSoundEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ParticipantStopSoundEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ParticipantStopSoundEvent) ProtoMessage() {}

func (x *CCitadelUserMsg_ParticipantStopSoundEvent) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ParticipantStopSoundEvent.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ParticipantStopSoundEvent) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{40}
}

func (x *CCitadelUserMsg_ParticipantStopSoundEvent) GetEvent() *gameevents_go.CMsgSosStopSoundEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *CCitadelUserMsg_ParticipantStopSoundEvent) GetPlayerSlots() []int32 {
	if x != nil {
		return x.PlayerSlots
	}
	return nil
}

type CCitadelUserMsg_ParticipantStopSoundEventHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event       *gameevents_go.CMsgSosStopSoundEventHash `protobuf:"bytes,1,req,name=event" json:"event,omitempty"`
	PlayerSlots []int32                                  `protobuf:"varint,2,rep,name=player_slots,json=playerSlots" json:"player_slots,omitempty"`
}

func (x *CCitadelUserMsg_ParticipantStopSoundEventHash) Reset() {
	*x = CCitadelUserMsg_ParticipantStopSoundEventHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ParticipantStopSoundEventHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ParticipantStopSoundEventHash) ProtoMessage() {}

func (x *CCitadelUserMsg_ParticipantStopSoundEventHash) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ParticipantStopSoundEventHash.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ParticipantStopSoundEventHash) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{41}
}

func (x *CCitadelUserMsg_ParticipantStopSoundEventHash) GetEvent() *gameevents_go.CMsgSosStopSoundEventHash {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *CCitadelUserMsg_ParticipantStopSoundEventHash) GetPlayerSlots() []int32 {
	if x != nil {
		return x.PlayerSlots
	}
	return nil
}

type CCitadelUserMsg_ParticipantSetSoundEventParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event       *gameevents_go.CMsgSosSetSoundEventParams `protobuf:"bytes,1,req,name=event" json:"event,omitempty"`
	PlayerSlots []int32                                   `protobuf:"varint,2,rep,name=player_slots,json=playerSlots" json:"player_slots,omitempty"`
}

func (x *CCitadelUserMsg_ParticipantSetSoundEventParams) Reset() {
	*x = CCitadelUserMsg_ParticipantSetSoundEventParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ParticipantSetSoundEventParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ParticipantSetSoundEventParams) ProtoMessage() {}

func (x *CCitadelUserMsg_ParticipantSetSoundEventParams) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ParticipantSetSoundEventParams.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ParticipantSetSoundEventParams) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{42}
}

func (x *CCitadelUserMsg_ParticipantSetSoundEventParams) GetEvent() *gameevents_go.CMsgSosSetSoundEventParams {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *CCitadelUserMsg_ParticipantSetSoundEventParams) GetPlayerSlots() []int32 {
	if x != nil {
		return x.PlayerSlots
	}
	return nil
}

type CCitadelUserMsg_ParticipantSetLibraryStackFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event       *gameevents_go.CMsgSosSetLibraryStackFields `protobuf:"bytes,1,req,name=event" json:"event,omitempty"`
	PlayerSlots []int32                                     `protobuf:"varint,2,rep,name=player_slots,json=playerSlots" json:"player_slots,omitempty"`
}

func (x *CCitadelUserMsg_ParticipantSetLibraryStackFields) Reset() {
	*x = CCitadelUserMsg_ParticipantSetLibraryStackFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_ParticipantSetLibraryStackFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_ParticipantSetLibraryStackFields) ProtoMessage() {}

func (x *CCitadelUserMsg_ParticipantSetLibraryStackFields) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_ParticipantSetLibraryStackFields.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_ParticipantSetLibraryStackFields) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{43}
}

func (x *CCitadelUserMsg_ParticipantSetLibraryStackFields) GetEvent() *gameevents_go.CMsgSosSetLibraryStackFields {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *CCitadelUserMsg_ParticipantSetLibraryStackFields) GetPlayerSlots() []int32 {
	if x != nil {
		return x.PlayerSlots
	}
	return nil
}

type CCitadelUserMsg_RecentDamageSummary_DamageRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Damage         *int32  `protobuf:"varint,1,opt,name=damage" json:"damage,omitempty"`
	Hits           *int32  `protobuf:"varint,2,opt,name=hits" json:"hits,omitempty"`
	DamageType     *uint32 `protobuf:"varint,3,opt,name=damage_type,json=damageType" json:"damage_type,omitempty"`
	HeroId         *uint32 `protobuf:"varint,4,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	AbilityId      *uint32 `protobuf:"varint,5,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	AttackerClass  *uint32 `protobuf:"varint,6,opt,name=attacker_class,json=attackerClass" json:"attacker_class,omitempty"`
	DamageAbsorbed *int32  `protobuf:"varint,7,opt,name=damage_absorbed,json=damageAbsorbed" json:"damage_absorbed,omitempty"`
	IsKillingBlow  *bool   `protobuf:"varint,8,opt,name=is_killing_blow,json=isKillingBlow" json:"is_killing_blow,omitempty"`
	VictimHeroId   *uint32 `protobuf:"varint,9,opt,name=victim_hero_id,json=victimHeroId" json:"victim_hero_id,omitempty"`
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) Reset() {
	*x = CCitadelUserMsg_RecentDamageSummary_DamageRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_RecentDamageSummary_DamageRecord) ProtoMessage() {}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_RecentDamageSummary_DamageRecord.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_RecentDamageSummary_DamageRecord) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{13, 0}
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetDamage() int32 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetHits() int32 {
	if x != nil && x.Hits != nil {
		return *x.Hits
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetDamageType() uint32 {
	if x != nil && x.DamageType != nil {
		return *x.DamageType
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetAttackerClass() uint32 {
	if x != nil && x.AttackerClass != nil {
		return *x.AttackerClass
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetDamageAbsorbed() int32 {
	if x != nil && x.DamageAbsorbed != nil {
		return *x.DamageAbsorbed
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetIsKillingBlow() bool {
	if x != nil && x.IsKillingBlow != nil {
		return *x.IsKillingBlow
	}
	return false
}

func (x *CCitadelUserMsg_RecentDamageSummary_DamageRecord) GetVictimHeroId() uint32 {
	if x != nil && x.VictimHeroId != nil {
		return *x.VictimHeroId
	}
	return 0
}

type CCitadelUserMsg_RecentDamageSummary_ModifierRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId      *uint32  `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	ModifierTypeId *uint32  `protobuf:"varint,2,opt,name=modifier_type_id,json=modifierTypeId" json:"modifier_type_id,omitempty"`
	EntindexCaster *int32   `protobuf:"varint,3,opt,name=entindex_caster,json=entindexCaster,def=-1" json:"entindex_caster,omitempty"`
	StartTime      *float32 `protobuf:"fixed32,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        *float32 `protobuf:"fixed32,5,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Debuff         *bool    `protobuf:"varint,6,opt,name=debuff" json:"debuff,omitempty"`
}

// Default values for CCitadelUserMsg_RecentDamageSummary_ModifierRecord fields.
const (
	Default_CCitadelUserMsg_RecentDamageSummary_ModifierRecord_EntindexCaster = int32(-1)
)

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) Reset() {
	*x = CCitadelUserMsg_RecentDamageSummary_ModifierRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_RecentDamageSummary_ModifierRecord) ProtoMessage() {}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_RecentDamageSummary_ModifierRecord.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_RecentDamageSummary_ModifierRecord) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{13, 1}
}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) GetModifierTypeId() uint32 {
	if x != nil && x.ModifierTypeId != nil {
		return *x.ModifierTypeId
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) GetEntindexCaster() int32 {
	if x != nil && x.EntindexCaster != nil {
		return *x.EntindexCaster
	}
	return Default_CCitadelUserMsg_RecentDamageSummary_ModifierRecord_EntindexCaster
}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) GetStartTime() float32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) GetEndTime() float32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *CCitadelUserMsg_RecentDamageSummary_ModifierRecord) GetDebuff() bool {
	if x != nil && x.Debuff != nil {
		return *x.Debuff
	}
	return false
}

type CCitadelUserMsg_GoldHistory_GoldRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencySource *int32 `protobuf:"varint,1,opt,name=currency_source,json=currencySource" json:"currency_source,omitempty"`
	Gold           *int32 `protobuf:"varint,2,opt,name=gold" json:"gold,omitempty"`
	Events         *int32 `protobuf:"varint,3,opt,name=events" json:"events,omitempty"`
}

func (x *CCitadelUserMsg_GoldHistory_GoldRecord) Reset() {
	*x = CCitadelUserMsg_GoldHistory_GoldRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_GoldHistory_GoldRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_GoldHistory_GoldRecord) ProtoMessage() {}

func (x *CCitadelUserMsg_GoldHistory_GoldRecord) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_GoldHistory_GoldRecord.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_GoldHistory_GoldRecord) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{17, 0}
}

func (x *CCitadelUserMsg_GoldHistory_GoldRecord) GetCurrencySource() int32 {
	if x != nil && x.CurrencySource != nil {
		return *x.CurrencySource
	}
	return 0
}

func (x *CCitadelUserMsg_GoldHistory_GoldRecord) GetGold() int32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *CCitadelUserMsg_GoldHistory_GoldRecord) GetEvents() int32 {
	if x != nil && x.Events != nil {
		return *x.Events
	}
	return 0
}

type CCitadelUserMsg_GoldHistory_MinuteRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchMinute *int32                                    `protobuf:"varint,1,opt,name=match_minute,json=matchMinute" json:"match_minute,omitempty"`
	GoldRecords []*CCitadelUserMsg_GoldHistory_GoldRecord `protobuf:"bytes,2,rep,name=gold_records,json=goldRecords" json:"gold_records,omitempty"`
}

func (x *CCitadelUserMsg_GoldHistory_MinuteRecord) Reset() {
	*x = CCitadelUserMsg_GoldHistory_MinuteRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_GoldHistory_MinuteRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_GoldHistory_MinuteRecord) ProtoMessage() {}

func (x *CCitadelUserMsg_GoldHistory_MinuteRecord) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_GoldHistory_MinuteRecord.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_GoldHistory_MinuteRecord) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{17, 1}
}

func (x *CCitadelUserMsg_GoldHistory_MinuteRecord) GetMatchMinute() int32 {
	if x != nil && x.MatchMinute != nil {
		return *x.MatchMinute
	}
	return 0
}

func (x *CCitadelUserMsg_GoldHistory_MinuteRecord) GetGoldRecords() []*CCitadelUserMsg_GoldHistory_GoldRecord {
	if x != nil {
		return x.GoldRecords
	}
	return nil
}

type CCitadelUserMsg_CameraController_Maintain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *float32 `protobuf:"fixed32,1,opt,name=duration,def=1" json:"duration,omitempty"`
}

// Default values for CCitadelUserMsg_CameraController_Maintain fields.
const (
	Default_CCitadelUserMsg_CameraController_Maintain_Duration = float32(1)
)

func (x *CCitadelUserMsg_CameraController_Maintain) Reset() {
	*x = CCitadelUserMsg_CameraController_Maintain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_CameraController_Maintain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_CameraController_Maintain) ProtoMessage() {}

func (x *CCitadelUserMsg_CameraController_Maintain) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_CameraController_Maintain.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_CameraController_Maintain) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CCitadelUserMsg_CameraController_Maintain) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return Default_CCitadelUserMsg_CameraController_Maintain_Duration
}

type CCitadelUserMsg_CameraController_Approach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed          *float32                        `protobuf:"fixed32,1,opt,name=speed,def=600" json:"speed,omitempty"`
	DefaultSpeed   *float32                        `protobuf:"fixed32,2,opt,name=default_speed,json=defaultSpeed,def=600" json:"default_speed,omitempty"`
	Acceleration   *float32                        `protobuf:"fixed32,3,opt,name=acceleration,def=1000" json:"acceleration,omitempty"`
	MinDuration    *float32                        `protobuf:"fixed32,4,opt,name=min_duration,json=minDuration,def=0" json:"min_duration,omitempty"`
	ApproachFloat  *float32                        `protobuf:"fixed32,5,opt,name=approach_float,json=approachFloat" json:"approach_float,omitempty"`
	ApproachVector *networkbasetypes_go.CMsgVector `protobuf:"bytes,6,opt,name=approach_vector,json=approachVector" json:"approach_vector,omitempty"`
	ChaseDefault   *bool                           `protobuf:"varint,7,opt,name=chase_default,json=chaseDefault" json:"chase_default,omitempty"`
}

// Default values for CCitadelUserMsg_CameraController_Approach fields.
const (
	Default_CCitadelUserMsg_CameraController_Approach_Speed        = float32(600)
	Default_CCitadelUserMsg_CameraController_Approach_DefaultSpeed = float32(600)
	Default_CCitadelUserMsg_CameraController_Approach_Acceleration = float32(1000)
	Default_CCitadelUserMsg_CameraController_Approach_MinDuration  = float32(0)
)

func (x *CCitadelUserMsg_CameraController_Approach) Reset() {
	*x = CCitadelUserMsg_CameraController_Approach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_CameraController_Approach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_CameraController_Approach) ProtoMessage() {}

func (x *CCitadelUserMsg_CameraController_Approach) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_CameraController_Approach.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_CameraController_Approach) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{18, 1}
}

func (x *CCitadelUserMsg_CameraController_Approach) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return Default_CCitadelUserMsg_CameraController_Approach_Speed
}

func (x *CCitadelUserMsg_CameraController_Approach) GetDefaultSpeed() float32 {
	if x != nil && x.DefaultSpeed != nil {
		return *x.DefaultSpeed
	}
	return Default_CCitadelUserMsg_CameraController_Approach_DefaultSpeed
}

func (x *CCitadelUserMsg_CameraController_Approach) GetAcceleration() float32 {
	if x != nil && x.Acceleration != nil {
		return *x.Acceleration
	}
	return Default_CCitadelUserMsg_CameraController_Approach_Acceleration
}

func (x *CCitadelUserMsg_CameraController_Approach) GetMinDuration() float32 {
	if x != nil && x.MinDuration != nil {
		return *x.MinDuration
	}
	return Default_CCitadelUserMsg_CameraController_Approach_MinDuration
}

func (x *CCitadelUserMsg_CameraController_Approach) GetApproachFloat() float32 {
	if x != nil && x.ApproachFloat != nil {
		return *x.ApproachFloat
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Approach) GetApproachVector() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.ApproachVector
	}
	return nil
}

func (x *CCitadelUserMsg_CameraController_Approach) GetChaseDefault() bool {
	if x != nil && x.ChaseDefault != nil {
		return *x.ChaseDefault
	}
	return false
}

type CCitadelUserMsg_CameraController_Spring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpringStrength *float32                        `protobuf:"fixed32,1,opt,name=spring_strength,json=springStrength,def=10" json:"spring_strength,omitempty"`
	MinSpeed       *float32                        `protobuf:"fixed32,4,opt,name=min_speed,json=minSpeed,def=0" json:"min_speed,omitempty"`
	MaxDuration    *float32                        `protobuf:"fixed32,5,opt,name=max_duration,json=maxDuration,def=0" json:"max_duration,omitempty"`
	TargetFloat    *float32                        `protobuf:"fixed32,6,opt,name=target_float,json=targetFloat" json:"target_float,omitempty"`
	TargetVector   *networkbasetypes_go.CMsgVector `protobuf:"bytes,7,opt,name=target_vector,json=targetVector" json:"target_vector,omitempty"`
}

// Default values for CCitadelUserMsg_CameraController_Spring fields.
const (
	Default_CCitadelUserMsg_CameraController_Spring_SpringStrength = float32(10)
	Default_CCitadelUserMsg_CameraController_Spring_MinSpeed       = float32(0)
	Default_CCitadelUserMsg_CameraController_Spring_MaxDuration    = float32(0)
)

func (x *CCitadelUserMsg_CameraController_Spring) Reset() {
	*x = CCitadelUserMsg_CameraController_Spring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_CameraController_Spring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_CameraController_Spring) ProtoMessage() {}

func (x *CCitadelUserMsg_CameraController_Spring) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_CameraController_Spring.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_CameraController_Spring) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{18, 2}
}

func (x *CCitadelUserMsg_CameraController_Spring) GetSpringStrength() float32 {
	if x != nil && x.SpringStrength != nil {
		return *x.SpringStrength
	}
	return Default_CCitadelUserMsg_CameraController_Spring_SpringStrength
}

func (x *CCitadelUserMsg_CameraController_Spring) GetMinSpeed() float32 {
	if x != nil && x.MinSpeed != nil {
		return *x.MinSpeed
	}
	return Default_CCitadelUserMsg_CameraController_Spring_MinSpeed
}

func (x *CCitadelUserMsg_CameraController_Spring) GetMaxDuration() float32 {
	if x != nil && x.MaxDuration != nil {
		return *x.MaxDuration
	}
	return Default_CCitadelUserMsg_CameraController_Spring_MaxDuration
}

func (x *CCitadelUserMsg_CameraController_Spring) GetTargetFloat() float32 {
	if x != nil && x.TargetFloat != nil {
		return *x.TargetFloat
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Spring) GetTargetVector() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.TargetVector
	}
	return nil
}

type CCitadelUserMsg_CameraController_Lerp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartFloat  *float32                        `protobuf:"fixed32,1,opt,name=start_float,json=startFloat" json:"start_float,omitempty"`
	StartVector *networkbasetypes_go.CMsgVector `protobuf:"bytes,2,opt,name=start_vector,json=startVector" json:"start_vector,omitempty"`
	EndFloat    *float32                        `protobuf:"fixed32,3,opt,name=end_float,json=endFloat" json:"end_float,omitempty"`
	EndVector   *networkbasetypes_go.CMsgVector `protobuf:"bytes,4,opt,name=end_vector,json=endVector" json:"end_vector,omitempty"`
	Bias        *float32                        `protobuf:"fixed32,5,opt,name=bias" json:"bias,omitempty"`
	Gain        *float32                        `protobuf:"fixed32,6,opt,name=gain" json:"gain,omitempty"`
	Duration    *float32                        `protobuf:"fixed32,7,opt,name=duration,def=1" json:"duration,omitempty"`
}

// Default values for CCitadelUserMsg_CameraController_Lerp fields.
const (
	Default_CCitadelUserMsg_CameraController_Lerp_Duration = float32(1)
)

func (x *CCitadelUserMsg_CameraController_Lerp) Reset() {
	*x = CCitadelUserMsg_CameraController_Lerp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_CameraController_Lerp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_CameraController_Lerp) ProtoMessage() {}

func (x *CCitadelUserMsg_CameraController_Lerp) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_CameraController_Lerp.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_CameraController_Lerp) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{18, 3}
}

func (x *CCitadelUserMsg_CameraController_Lerp) GetStartFloat() float32 {
	if x != nil && x.StartFloat != nil {
		return *x.StartFloat
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Lerp) GetStartVector() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.StartVector
	}
	return nil
}

func (x *CCitadelUserMsg_CameraController_Lerp) GetEndFloat() float32 {
	if x != nil && x.EndFloat != nil {
		return *x.EndFloat
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Lerp) GetEndVector() *networkbasetypes_go.CMsgVector {
	if x != nil {
		return x.EndVector
	}
	return nil
}

func (x *CCitadelUserMsg_CameraController_Lerp) GetBias() float32 {
	if x != nil && x.Bias != nil {
		return *x.Bias
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Lerp) GetGain() float32 {
	if x != nil && x.Gain != nil {
		return *x.Gain
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Lerp) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return Default_CCitadelUserMsg_CameraController_Lerp_Duration
}

type CCitadelUserMsg_CameraController_Lag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinDuration    *float32 `protobuf:"fixed32,1,opt,name=min_duration,json=minDuration" json:"min_duration,omitempty"`
	LagTime        *float32 `protobuf:"fixed32,2,opt,name=lag_time,json=lagTime" json:"lag_time,omitempty"`
	MaxSpeed       *float32 `protobuf:"fixed32,3,opt,name=max_speed,json=maxSpeed" json:"max_speed,omitempty"`
	SpringStrength *float32 `protobuf:"fixed32,4,opt,name=spring_strength,json=springStrength" json:"spring_strength,omitempty"`
}

func (x *CCitadelUserMsg_CameraController_Lag) Reset() {
	*x = CCitadelUserMsg_CameraController_Lag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_CameraController_Lag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_CameraController_Lag) ProtoMessage() {}

func (x *CCitadelUserMsg_CameraController_Lag) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_CameraController_Lag.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_CameraController_Lag) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{18, 4}
}

func (x *CCitadelUserMsg_CameraController_Lag) GetMinDuration() float32 {
	if x != nil && x.MinDuration != nil {
		return *x.MinDuration
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Lag) GetLagTime() float32 {
	if x != nil && x.LagTime != nil {
		return *x.LagTime
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Lag) GetMaxSpeed() float32 {
	if x != nil && x.MaxSpeed != nil {
		return *x.MaxSpeed
	}
	return 0
}

func (x *CCitadelUserMsg_CameraController_Lag) GetSpringStrength() float32 {
	if x != nil && x.SpringStrength != nil {
		return *x.SpringStrength
	}
	return 0
}

type CCitadelUserMsg_PlayerLifetimeStatInfo_Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatName        *string `protobuf:"bytes,1,opt,name=stat_name,json=statName" json:"stat_name,omitempty"`
	MatchTotal      *uint32 `protobuf:"varint,2,opt,name=match_total,json=matchTotal" json:"match_total,omitempty"`
	LifetimeValue   *uint32 `protobuf:"varint,3,opt,name=lifetime_value,json=lifetimeValue" json:"lifetime_value,omitempty"`
	Priority        *uint32 `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	PrevLifetimeMax *uint32 `protobuf:"varint,5,opt,name=prev_lifetime_max,json=prevLifetimeMax" json:"prev_lifetime_max,omitempty"`
	StatType        *uint32 `protobuf:"varint,6,opt,name=stat_type,json=statType" json:"stat_type,omitempty"`
	StatTypeId      *uint32 `protobuf:"varint,7,opt,name=stat_type_id,json=statTypeId" json:"stat_type_id,omitempty"`
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) Reset() {
	*x = CCitadelUserMsg_PlayerLifetimeStatInfo_Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) ProtoMessage() {}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_PlayerLifetimeStatInfo_Stat.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{33, 0}
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) GetStatName() string {
	if x != nil && x.StatName != nil {
		return *x.StatName
	}
	return ""
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) GetMatchTotal() uint32 {
	if x != nil && x.MatchTotal != nil {
		return *x.MatchTotal
	}
	return 0
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) GetLifetimeValue() uint32 {
	if x != nil && x.LifetimeValue != nil {
		return *x.LifetimeValue
	}
	return 0
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) GetPrevLifetimeMax() uint32 {
	if x != nil && x.PrevLifetimeMax != nil {
		return *x.PrevLifetimeMax
	}
	return 0
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) GetStatType() uint32 {
	if x != nil && x.StatType != nil {
		return *x.StatType
	}
	return 0
}

func (x *CCitadelUserMsg_PlayerLifetimeStatInfo_Stat) GetStatTypeId() uint32 {
	if x != nil && x.StatTypeId != nil {
		return *x.StatTypeId
	}
	return 0
}

type CCitadelUserMsg_GetDamageStatsResponse_StatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetPlayerSlot []uint32 `protobuf:"varint,1,rep,packed,name=target_player_slot,json=targetPlayerSlot" json:"target_player_slot,omitempty"`
	Value            []uint32 `protobuf:"varint,2,rep,packed,name=value" json:"value,omitempty"`
}

func (x *CCitadelUserMsg_GetDamageStatsResponse_StatType) Reset() {
	*x = CCitadelUserMsg_GetDamageStatsResponse_StatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_usermessages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCitadelUserMsg_GetDamageStatsResponse_StatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCitadelUserMsg_GetDamageStatsResponse_StatType) ProtoMessage() {}

func (x *CCitadelUserMsg_GetDamageStatsResponse_StatType) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_usermessages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCitadelUserMsg_GetDamageStatsResponse_StatType.ProtoReflect.Descriptor instead.
func (*CCitadelUserMsg_GetDamageStatsResponse_StatType) Descriptor() ([]byte, []int) {
	return file_citadel_usermessages_proto_rawDescGZIP(), []int{38, 0}
}

func (x *CCitadelUserMsg_GetDamageStatsResponse_StatType) GetTargetPlayerSlot() []uint32 {
	if x != nil {
		return x.TargetPlayerSlot
	}
	return nil
}

func (x *CCitadelUserMsg_GetDamageStatsResponse_StatType) GetValue() []uint32 {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_citadel_usermessages_proto protoreflect.FileDescriptor

var file_citadel_usermessages_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x5f, 0x67, 0x63,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x11, 0x43, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0xfc, 0x05, 0x0a, 0x1a, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65,
	0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x72, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d,
	0x31, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x69, 0x63, 0x74, 0x69,
	0x6d, 0x12, 0x31, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d,
	0x31, 0x52, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x02, 0x2d, 0x31, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x02, 0x2d, 0x31, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x62, 0x73, 0x6f, 0x72, 0x62, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x72, 0x62, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x6d,
	0x61, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x61, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x63,
	0x74, 0x69, 0x6d, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x73,
	0x68, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x78,
	0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x69, 0x63,
	0x74, 0x69, 0x6d, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4c, 0x6f, 0x73,
	0x74, 0x22, 0xbe, 0x02, 0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0d,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x08, 0x31, 0x36, 0x37, 0x37, 0x37, 0x32, 0x31, 0x35, 0x52, 0x0b,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x12, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x10, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xb6, 0x03, 0x0a, 0x17, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x2c,
	0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x78, 0x0a, 0x1a, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x3a, 0x24, 0x6b, 0x5f, 0x45, 0x50, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x16, 0x70,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x5f,
	0x65, 0x6e, 0x65, 0x6d, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x70, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x70, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x61, 0x70, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x69, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x48,
	0x65, 0x72, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x62, 0x6c,
	0x69, 0x6e, 0x64, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x7a, 0x0a, 0x19, 0x43,
	0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50,
	0x69, 0x6e, 0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x77,
	0x68, 0x65, 0x65, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x69, 0x6e, 0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8f, 0x02, 0x0a, 0x1b, 0x43, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12,
	0x78, 0x0a, 0x1a, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x50, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x3a, 0x24, 0x6b, 0x5f, 0x45,
	0x50, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x53,
	0x68, 0x6f, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x16, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x41, 0x6e, 0x64,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x93, 0x02, 0x0a, 0x1d, 0x43, 0x43,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x51, 0x75,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x1d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x19, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x50, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x19, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02,
	0x2d, 0x31, 0x52, 0x16, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x6f,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x6c, 0x61,
	0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x61, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3a, 0x14,
	0x6b, 0x5f, 0x45, 0x4c, 0x61, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x73, 0x0a, 0x17, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x5f, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x12, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x26, 0x0a, 0x07,
	0x6d, 0x61, 0x70, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x70,
	0x6c, 0x69, 0x6e, 0x65, 0x22, 0x59, 0x0a, 0x1b, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x78, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22,
	0xe5, 0x02, 0x0a, 0x22, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x56, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x12, 0x3a,
	0x0a, 0x17, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x02, 0x2d, 0x31, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x68, 0x69, 0x74,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x48, 0x69, 0x74, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x0e, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x02, 0x0a, 0x20, 0x43, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x12,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x11, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0f, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4a, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x3a, 0x08, 0x45, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x06, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x08, 0x45, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x53, 0x6f,
	0x6c, 0x64, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x53, 0x77, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x10, 0x03, 0x22, 0xa4, 0x02, 0x0a, 0x22, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x56, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x12, 0x35, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x16, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70,
	0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x14, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x65, 0x72,
	0x6f, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x22, 0x43, 0x43,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x10, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0f, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x8d, 0x07, 0x0a, 0x23, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x58, 0x0a, 0x0e,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x73, 0x74, 0x5f, 0x67, 0x6f, 0x6c, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x73, 0x74, 0x47, 0x6f, 0x6c, 0x64,
	0x12, 0x5e, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x43, 0x43, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x0f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x1a, 0xb1, 0x02, 0x0a, 0x0c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x72, 0x62, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x62,
	0x73, 0x6f, 0x72, 0x62, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6b, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x77, 0x12, 0x24,
	0x0a, 0x0e, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x48, 0x65,
	0x72, 0x6f, 0x49, 0x64, 0x1a, 0xd8, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x62, 0x75, 0x66,
	0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x65, 0x62, 0x75, 0x66, 0x66, 0x22,
	0x46, 0x0a, 0x24, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x61,
	0x6d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa7, 0x02, 0x0a, 0x19, 0x43, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x68, 0x61, 0x74,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0c, 0x70,
	0x61, 0x77, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65,
	0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72,
	0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x31, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x43, 0x0a, 0x0a,
	0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x61, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x3a, 0x14, 0x6b, 0x5f, 0x45, 0x4c, 0x61, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x23, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x43, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x61, 0x6e, 0x65,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x3a, 0x14, 0x6b, 0x5f, 0x45, 0x4c, 0x61, 0x6e, 0x65, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x09, 0x6c, 0x61, 0x6e,
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xfe, 0x02, 0x0a, 0x1b, 0x43, 0x43, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43, 0x43,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x47, 0x6f,
	0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x61, 0x0a, 0x0a, 0x47, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x7d, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x67,
	0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x47, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0b, 0x67, 0x6f, 0x6c, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xa4, 0x0c, 0x0a, 0x20, 0x43, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0x6b, 0x5f, 0x45,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x14, 0x6b, 0x5f, 0x45, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x4f, 0x70, 0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x14, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x5f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x73, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x08, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x46, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x61, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x43, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x12,
	0x40, 0x0a, 0x06, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x70, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x65, 0x72, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x4c, 0x65, 0x72, 0x70, 0x52, 0x04, 0x6c, 0x65, 0x72, 0x70, 0x12, 0x37, 0x0a,
	0x03, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x43, 0x43, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x61,
	0x67, 0x52, 0x03, 0x6c, 0x61, 0x67, 0x1a, 0x29, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x3a, 0x01, 0x31, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xa1, 0x02, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x19,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x3a, 0x03, 0x36,
	0x30, 0x30, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x3a, 0x03, 0x36, 0x30, 0x30, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x3a, 0x04, 0x31, 0x30, 0x30, 0x30, 0x52,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x5f,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x61, 0x63, 0x68, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x34, 0x0a, 0x0f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0xd0, 0x01, 0x0a, 0x06, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x0e, 0x73,
	0x70, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a,
	0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x3a, 0x01, 0x30, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x30, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0xe7, 0x01, 0x0a, 0x04, 0x4c, 0x65, 0x72,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x12, 0x2e, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12,
	0x2a, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x69, 0x61, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x67,
	0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x3a, 0x01, 0x31, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x89, 0x01, 0x0a, 0x03, 0x4c, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x61, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x6c, 0x61, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x73, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x47,
	0x0a, 0x20, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x19, 0x43, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x68, 0x61, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x26, 0x43, 0x49, 0x54, 0x41, 0x44,
	0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x55, 0x4e, 0x50, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x44, 0x4f, 0x57,
	0x4e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f,
	0x74, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x1a, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x4b, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x69,
	0x63, 0x74, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x12, 0x31,
	0x0a, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x11,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x2f, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x2a, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x5f, 0x42, 0x72, 0x65, 0x61,
	0x6b, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x44, 0x65,
	0x62, 0x72, 0x69, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x12, 0x2a, 0x0a, 0x0a, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x09, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49,
	0x64, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x0f, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x7e, 0x0a, 0x25, 0x43,
	0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x53,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x30, 0x0a, 0x0d, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x51, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x0c, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x1d, 0x43,
	0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0c,
	0x68, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0b, 0x68, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x87, 0x01, 0x0a, 0x21, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x30, 0x12, 0x30, 0x0a, 0x14, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x31, 0x22, 0xa4, 0x01,
	0x0a, 0x23, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02,
	0x2d, 0x31, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52,
	0x0e, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0xaf, 0x02, 0x0a, 0x27, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x41, 0x75, 0x72,
	0x61, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a,
	0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75,
	0x72, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x75, 0x72, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x75, 0x72, 0x61, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61, 0x75, 0x72, 0x61, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x23, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x74, 0x46, 0x69, 0x72, 0x65, 0x64, 0x22, 0xd8, 0x02,
	0x0a, 0x22, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x41, 0x6e, 0x69, 0x6d, 0x12, 0x29, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x3a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x66, 0x61, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x1f, 0x43, 0x43, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x44, 0x65, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0d,
	0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0c, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x10, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x02, 0x2d, 0x31, 0x52, 0x0f, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x43,
	0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x0d, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x22, 0x21, 0x0a, 0x1f, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x5f, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x22, 0xca, 0x03, 0x0a, 0x26, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0xf2, 0x01, 0x0a,
	0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x69, 0x66,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x6c,
	0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x61, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0x76, 0x0a, 0x1e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x5f, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x44, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x69, 0x63, 0x74, 0x69, 0x6d,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x5f, 0x64, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6d, 0x69,
	0x6e, 0x61, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x21, 0x43, 0x43,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x2b, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x69, 0x63, 0x74,
	0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x12, 0x2f, 0x0a, 0x11,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x10, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xf5, 0x02, 0x0a,
	0x23, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x70, 0x61, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x02, 0x2d, 0x31, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x65,
	0x72, 0x6f, 0x50, 0x61, 0x77, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x76, 0x69, 0x63, 0x74, 0x69,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0e, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x12, 0x2a, 0x0a, 0x0a, 0x76,
	0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x76, 0x69,
	0x63, 0x74, 0x69, 0x6d, 0x50, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x1c, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x47, 0x61, 0x6d, 0x65,
	0x4f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x6a, 0x75, 0x73, 0x74, 0x5f,
	0x61, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6a, 0x75,
	0x73, 0x74, 0x41, 0x54, 0x65, 0x73, 0x74, 0x22, 0xda, 0x02, 0x0a, 0x26, 0x43, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x4a, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x56, 0x0a, 0x08,
	0x53, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x7e, 0x0a, 0x2a, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x22, 0x7c, 0x0a, 0x29, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f,
	0x74, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x2d, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x6f,
	0x70, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x2e, 0x43, 0x43,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x6f, 0x73, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f,
	0x74, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x30, 0x43, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x73,
	0x53, 0x65, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x2a,
	0xfe, 0x0a, 0x0a, 0x15, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x11, 0x6b, 0x5f, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x10, 0xac,
	0x02, 0x12, 0x17, 0x0a, 0x12, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f,
	0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x10, 0xaf, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x6b, 0x5f,
	0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x10, 0xb0, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0xb2, 0x02, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x5f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x10, 0xb4, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f,
	0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0xb5, 0x02, 0x12, 0x23, 0x0a, 0x1e,
	0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x10, 0xb6,
	0x02, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f,
	0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x10, 0xb7, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x10,
	0xb8, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0xb9, 0x02, 0x12,
	0x17, 0x0a, 0x12, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x73, 0x67, 0x10, 0xba, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xbb, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x10, 0xbc, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x6b, 0x5f, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0xbd, 0x02, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72,
	0x75, 0x70, 0x74, 0x65, 0x64, 0x10, 0xbe, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x6b, 0x5f, 0x45, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x4b, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x10, 0xbf, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x5f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x64, 0x6f, 0x6c, 0x10, 0xc0, 0x02,
	0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x53,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x73, 0x10, 0xc1, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x6b, 0x5f, 0x45, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x10, 0xc2, 0x02,
	0x12, 0x19, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x42,
	0x75, 0x6c, 0x6c, 0x65, 0x74, 0x48, 0x69, 0x74, 0x10, 0xc3, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x6b,
	0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x10, 0xc4, 0x02, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f,
	0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x10, 0xc5, 0x02, 0x12, 0x20, 0x0a, 0x1b, 0x6b,
	0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x10, 0xc6, 0x02, 0x12, 0x23, 0x0a,
	0x1e, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x75, 0x72, 0x61,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x10,
	0xc7, 0x02, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x5f, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x74, 0x46,
	0x69, 0x72, 0x65, 0x64, 0x10, 0xc9, 0x02, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0xca, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x6b,
	0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x69, 0x6e, 0x67, 0x10, 0xcb, 0x02, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x10, 0xcc, 0x02, 0x12, 0x1f, 0x0a, 0x1a,
	0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x44, 0x65, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x10, 0xcd, 0x02, 0x12, 0x26, 0x0a,
	0x21, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x10, 0xce, 0x02, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x10, 0xd0, 0x02, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x5f, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x44, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x10, 0xd1, 0x02, 0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x5f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x10, 0xd2, 0x02, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd3, 0x02, 0x12, 0x2a, 0x0a,
	0x25, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xd4, 0x02, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0xd5, 0x02, 0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x74,
	0x6f, 0x70, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x10, 0xd6, 0x02, 0x12, 0x2e, 0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x10, 0xd7, 0x02, 0x12, 0x30, 0x0a, 0x2b, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x10, 0xd8, 0x02, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x10, 0xd9, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x6b, 0x5f, 0x45, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x10, 0xda, 0x02,
	0x2a, 0x45, 0x0a, 0x17, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x25, 0x6b,
	0x5f, 0x45, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x5f, 0x42, 0x72, 0x65, 0x61,
	0x6b, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x44, 0x65,
	0x62, 0x72, 0x69, 0x73, 0x10, 0xf4, 0x03, 0x2a, 0xe0, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x73, 0x67, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x6b,
	0x5f, 0x45, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x5f, 0x48, 0x69, 0x64, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x50, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x4f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x10, 0x02, 0x12,
	0x24, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x4f, 0x6e, 0x6c, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x50, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x4f, 0x6e, 0x6c, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x04, 0x2a, 0x88, 0x01, 0x0a, 0x0f, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x70, 0x5f, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x70, 0x5f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x45, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f,
	0x70, 0x5f, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f,
	0x45, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x70, 0x5f, 0x4c, 0x65, 0x72, 0x70, 0x10, 0x05,
	0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x45, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x4f, 0x70, 0x5f,
	0x4c, 0x61, 0x67, 0x10, 0x06, 0x2a, 0xc4, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x5f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x73, 0x10, 0x00, 0x12,
	0x22, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x5f,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f,
	0x45, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x46, 0x4f, 0x56, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17,
	0x6b, 0x5f, 0x45, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x45,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x56, 0x65, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x48,
	0x6f, 0x72, 0x69, 0x7a, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x10, 0x06, 0x2a, 0x60, 0x0a, 0x0c,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f,
	0x6b, 0x5f, 0x45, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x45, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x73, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c,
	0x6b, 0x5f, 0x45, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4f,
	0x70, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x10, 0x02, 0x2a, 0xc3,
	0x03, 0x0a, 0x13, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x49, 0x54, 0x41, 0x44, 0x45,
	0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55,
	0x4e, 0x50, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x44, 0x4f, 0x57, 0x4e,
	0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48,
	0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x50, 0x41, 0x55,
	0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c,
	0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x55,
	0x54, 0x4f, 0x5f, 0x55, 0x4e, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x28, 0x0a,
	0x24, 0x43, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x49, 0x54, 0x41, 0x44,
	0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x49, 0x54, 0x41,
	0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x59, 0x4f, 0x55, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x06, 0x12, 0x22, 0x0a, 0x1e,
	0x43, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x54, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x07,
	0x12, 0x28, 0x0a, 0x24, 0x43, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54,
	0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x54, 0x55, 0x4e, 0x50,
	0x41, 0x55, 0x53, 0x45, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x08, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x49,
	0x54, 0x41, 0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x53, 0x4c, 0x45, 0x46, 0x54, 0x10,
	0x09, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x49, 0x54, 0x41, 0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41,
	0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x54, 0x50, 0x41,
	0x55, 0x53, 0x45, 0x59, 0x45, 0x54, 0x10, 0x0a, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x49, 0x54, 0x41,
	0x44, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x44, 0x4f,
	0x57, 0x4e, 0x10, 0x0b, 0x2a, 0x89, 0x01, 0x0a, 0x18, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50,
	0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x1f, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x53, 0x68, 0x69, 0x76, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x65, 0x64, 0x10, 0x03,
	0x42, 0x20, 0x5a, 0x1e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x67, 0x6f,
}

var (
	file_citadel_usermessages_proto_rawDescOnce sync.Once
	file_citadel_usermessages_proto_rawDescData = file_citadel_usermessages_proto_rawDesc
)

func file_citadel_usermessages_proto_rawDescGZIP() []byte {
	file_citadel_usermessages_proto_rawDescOnce.Do(func() {
		file_citadel_usermessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_citadel_usermessages_proto_rawDescData)
	})
	return file_citadel_usermessages_proto_rawDescData
}

var file_citadel_usermessages_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_citadel_usermessages_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_citadel_usermessages_proto_goTypes = []any{
	(CitadelUserMessageIds)(0),                                 // 0: CitadelUserMessageIds
	(CitadelEntityMessageIds)(0),                               // 1: CitadelEntityMessageIds
	(ChatMsgPingMarkerInfo)(0),                                 // 2: ChatMsgPingMarkerInfo
	(CameraOperation)(0),                                       // 3: CameraOperation
	(CameraParam)(0),                                           // 4: CameraParam
	(CameraAction)(0),                                          // 5: CameraAction
	(ECitadelChatMessage)(0),                                   // 6: ECitadelChatMessage
	(PostProcessingGameStates)(0),                              // 7: PostProcessingGameStates
	(CCitadelUserMsg_AbilitiesChanged_Change)(0),               // 8: CCitadelUserMsg_AbilitiesChanged.Change
	(*CUserMessageEmpty)(nil),                                  // 9: CUserMessageEmpty
	(*CCitadelUserMessage_Damage)(nil),                         // 10: CCitadelUserMessage_Damage
	(*PingCommonData)(nil),                                     // 11: PingCommonData
	(*CCitadelUserMsg_MapPing)(nil),                            // 12: CCitadelUserMsg_MapPing
	(*CCitadelUserMsg_PingWheel)(nil),                          // 13: CCitadelUserMsg_PingWheel
	(*CCitadelUserMsg_AbilityPing)(nil),                        // 14: CCitadelUserMsg_AbilityPing
	(*CCitadelUserMsg_QuickResponse)(nil),                      // 15: CCitadelUserMsg_QuickResponse
	(*CCitadelUserMsg_MapLine)(nil),                            // 16: CCitadelUserMsg_MapLine
	(*CCitadelUserMsg_TeamRewards)(nil),                        // 17: CCitadelUserMsg_TeamRewards
	(*CCitadelUserMsg_TriggerDamageFlash)(nil),                 // 18: CCitadelUserMsg_TriggerDamageFlash
	(*CCitadelUserMsg_AbilitiesChanged)(nil),                   // 19: CCitadelUserMsg_AbilitiesChanged
	(*CCitadelUserMsg_AbilityInterrupted)(nil),                 // 20: CCitadelUserMsg_AbilityInterrupted
	(*CCitadelUserMsg_AbilityLateFailure)(nil),                 // 21: CCitadelUserMsg_AbilityLateFailure
	(*CCitadelUserMsg_RecentDamageSummary)(nil),                // 22: CCitadelUserMsg_RecentDamageSummary
	(*CCitadelUserMsg_SpectatorTeamChanged)(nil),               // 23: CCitadelUserMsg_SpectatorTeamChanged
	(*CCitadelUserMsg_ChatWheel)(nil),                          // 24: CCitadelUserMsg_ChatWheel
	(*CCitadelUserMsg_ChatMsg)(nil),                            // 25: CCitadelUserMsg_ChatMsg
	(*CCitadelUserMsg_GoldHistory)(nil),                        // 26: CCitadelUserMsg_GoldHistory
	(*CCitadelUserMsg_CameraController)(nil),                   // 27: CCitadelUserMsg_CameraController
	(*CCitadelUserMsg_PostMatchDetails)(nil),                   // 28: CCitadelUserMsg_PostMatchDetails
	(*CCitadelUserMsg_ChatEvent)(nil),                          // 29: CCitadelUserMsg_ChatEvent
	(*CCitadelUserMsg_HeroKilled)(nil),                         // 30: CCitadelUserMsg_HeroKilled
	(*CCitadelEntityMsg_BreakablePropSpawnDebris)(nil),         // 31: CCitadelEntityMsg_BreakablePropSpawnDebris
	(*CCitadelUserMsg_ReturnIdol)(nil),                         // 32: CCitadelUserMsg_ReturnIdol
	(*CCitadelUserMsg_SetClientCameraAngles)(nil),              // 33: CCitadelUserMsg_SetClientCameraAngles
	(*CCitadelUserMessage_BulletHit)(nil),                      // 34: CCitadelUserMessage_BulletHit
	(*CCitadelUserMessage_ObjectiveMask)(nil),                  // 35: CCitadelUserMessage_ObjectiveMask
	(*CCitadelUserMessage_ModifierApplied)(nil),                // 36: CCitadelUserMessage_ModifierApplied
	(*CCitadelUserMessage_AuraModifierApplied)(nil),            // 37: CCitadelUserMessage_AuraModifierApplied
	(*CCitadelUserMsg_ObstructedShotFired)(nil),                // 38: CCitadelUserMsg_ObstructedShotFired
	(*CCitadelUserMsg_PostProcessingAnim)(nil),                 // 39: CCitadelUserMsg_PostProcessingAnim
	(*CCitadelUserMsg_DeathReplayData)(nil),                    // 40: CCitadelUserMsg_DeathReplayData
	(*CCitadelUserMsg_ForceShopClosed)(nil),                    // 41: CCitadelUserMsg_ForceShopClosed
	(*CCitadelUserMsg_PlayerLifetimeStatInfo)(nil),             // 42: CCitadelUserMsg_PlayerLifetimeStatInfo
	(*CCitadelUserMsg_StaminaDrained)(nil),                     // 43: CCitadelUserMsg_StaminaDrained
	(*CCitadelUserMessage_AbilityNotify)(nil),                  // 44: CCitadelUserMessage_AbilityNotify
	(*CCitadelUserMessage_CurrencyChanged)(nil),                // 45: CCitadelUserMessage_CurrencyChanged
	(*CCitadelUserMessage_GameOver)(nil),                       // 46: CCitadelUserMessage_GameOver
	(*CCitadelUserMsg_GetDamageStatsResponse)(nil),             // 47: CCitadelUserMsg_GetDamageStatsResponse
	(*CCitadelUserMsg_ParticipantStartSoundEvent)(nil),         // 48: CCitadelUserMsg_ParticipantStartSoundEvent
	(*CCitadelUserMsg_ParticipantStopSoundEvent)(nil),          // 49: CCitadelUserMsg_ParticipantStopSoundEvent
	(*CCitadelUserMsg_ParticipantStopSoundEventHash)(nil),      // 50: CCitadelUserMsg_ParticipantStopSoundEventHash
	(*CCitadelUserMsg_ParticipantSetSoundEventParams)(nil),     // 51: CCitadelUserMsg_ParticipantSetSoundEventParams
	(*CCitadelUserMsg_ParticipantSetLibraryStackFields)(nil),   // 52: CCitadelUserMsg_ParticipantSetLibraryStackFields
	(*CCitadelUserMsg_RecentDamageSummary_DamageRecord)(nil),   // 53: CCitadelUserMsg_RecentDamageSummary.DamageRecord
	(*CCitadelUserMsg_RecentDamageSummary_ModifierRecord)(nil), // 54: CCitadelUserMsg_RecentDamageSummary.ModifierRecord
	(*CCitadelUserMsg_GoldHistory_GoldRecord)(nil),             // 55: CCitadelUserMsg_GoldHistory.GoldRecord
	(*CCitadelUserMsg_GoldHistory_MinuteRecord)(nil),           // 56: CCitadelUserMsg_GoldHistory.MinuteRecord
	(*CCitadelUserMsg_CameraController_Maintain)(nil),          // 57: CCitadelUserMsg_CameraController.Maintain
	(*CCitadelUserMsg_CameraController_Approach)(nil),          // 58: CCitadelUserMsg_CameraController.Approach
	(*CCitadelUserMsg_CameraController_Spring)(nil),            // 59: CCitadelUserMsg_CameraController.Spring
	(*CCitadelUserMsg_CameraController_Lerp)(nil),              // 60: CCitadelUserMsg_CameraController.Lerp
	(*CCitadelUserMsg_CameraController_Lag)(nil),               // 61: CCitadelUserMsg_CameraController.Lag
	(*CCitadelUserMsg_PlayerLifetimeStatInfo_Stat)(nil),        // 62: CCitadelUserMsg_PlayerLifetimeStatInfo.Stat
	(*CCitadelUserMsg_GetDamageStatsResponse_StatType)(nil),    // 63: CCitadelUserMsg_GetDamageStatsResponse.StatType
	(*networkbasetypes_go.CMsgVector)(nil),                     // 64: CMsgVector
	(citadel_gcmessages_common_go.CMsgLaneColor)(0),            // 65: CMsgLaneColor
	(*citadel_gcmessages_common_go.CMsgMapLine)(nil),           // 66: CMsgMapLine
	(*networkbasetypes_go.CEntityMsg)(nil),                     // 67: CEntityMsg
	(*networkbasetypes_go.CMsgQAngle)(nil),                     // 68: CMsgQAngle
	(*gameevents_go.CMsgSosStartSoundEvent)(nil),               // 69: CMsgSosStartSoundEvent
	(*gameevents_go.CMsgSosStopSoundEvent)(nil),                // 70: CMsgSosStopSoundEvent
	(*gameevents_go.CMsgSosStopSoundEventHash)(nil),            // 71: CMsgSosStopSoundEventHash
	(*gameevents_go.CMsgSosSetSoundEventParams)(nil),           // 72: CMsgSosSetSoundEventParams
	(*gameevents_go.CMsgSosSetLibraryStackFields)(nil),         // 73: CMsgSosSetLibraryStackFields
}
var file_citadel_usermessages_proto_depIdxs = []int32{
	64, // 0: CCitadelUserMessage_Damage.origin:type_name -> CMsgVector
	64, // 1: PingCommonData.ping_location:type_name -> CMsgVector
	11, // 2: CCitadelUserMsg_MapPing.ping_data:type_name -> PingCommonData
	2,  // 3: CCitadelUserMsg_MapPing.ping_marker_and_sound_info:type_name -> ChatMsgPingMarkerInfo
	11, // 4: CCitadelUserMsg_PingWheel.ping_data:type_name -> PingCommonData
	11, // 5: CCitadelUserMsg_AbilityPing.ping_data:type_name -> PingCommonData
	2,  // 6: CCitadelUserMsg_AbilityPing.ping_marker_and_sound_info:type_name -> ChatMsgPingMarkerInfo
	11, // 7: CCitadelUserMsg_QuickResponse.ping_data:type_name -> PingCommonData
	65, // 8: CCitadelUserMsg_QuickResponse.lane_color:type_name -> CMsgLaneColor
	66, // 9: CCitadelUserMsg_MapLine.mapline:type_name -> CMsgMapLine
	64, // 10: CCitadelUserMsg_TriggerDamageFlash.flash_position:type_name -> CMsgVector
	8,  // 11: CCitadelUserMsg_AbilitiesChanged.change:type_name -> CCitadelUserMsg_AbilitiesChanged.Change
	53, // 12: CCitadelUserMsg_RecentDamageSummary.damage_records:type_name -> CCitadelUserMsg_RecentDamageSummary.DamageRecord
	54, // 13: CCitadelUserMsg_RecentDamageSummary.modifier_records:type_name -> CCitadelUserMsg_RecentDamageSummary.ModifierRecord
	65, // 14: CCitadelUserMsg_ChatWheel.lane_color:type_name -> CMsgLaneColor
	65, // 15: CCitadelUserMsg_ChatMsg.lane_color:type_name -> CMsgLaneColor
	56, // 16: CCitadelUserMsg_GoldHistory.minute_records:type_name -> CCitadelUserMsg_GoldHistory.MinuteRecord
	5,  // 17: CCitadelUserMsg_CameraController.action:type_name -> CameraAction
	3,  // 18: CCitadelUserMsg_CameraController.operation:type_name -> CameraOperation
	4,  // 19: CCitadelUserMsg_CameraController.param:type_name -> CameraParam
	57, // 20: CCitadelUserMsg_CameraController.maintain:type_name -> CCitadelUserMsg_CameraController.Maintain
	58, // 21: CCitadelUserMsg_CameraController.approach:type_name -> CCitadelUserMsg_CameraController.Approach
	59, // 22: CCitadelUserMsg_CameraController.spring:type_name -> CCitadelUserMsg_CameraController.Spring
	60, // 23: CCitadelUserMsg_CameraController.lerp:type_name -> CCitadelUserMsg_CameraController.Lerp
	61, // 24: CCitadelUserMsg_CameraController.lag:type_name -> CCitadelUserMsg_CameraController.Lag
	6,  // 25: CCitadelUserMsg_ChatEvent.type:type_name -> ECitadelChatMessage
	67, // 26: CCitadelEntityMsg_BreakablePropSpawnDebris.entity_msg:type_name -> CEntityMsg
	64, // 27: CCitadelEntityMsg_BreakablePropSpawnDebris.damage_pos:type_name -> CMsgVector
	64, // 28: CCitadelUserMsg_ReturnIdol.return_location:type_name -> CMsgVector
	68, // 29: CCitadelUserMsg_SetClientCameraAngles.camera_angles:type_name -> CMsgQAngle
	7,  // 30: CCitadelUserMsg_PostProcessingAnim.state:type_name -> PostProcessingGameStates
	22, // 31: CCitadelUserMsg_DeathReplayData.damage_summary:type_name -> CCitadelUserMsg_RecentDamageSummary
	62, // 32: CCitadelUserMsg_PlayerLifetimeStatInfo.stats:type_name -> CCitadelUserMsg_PlayerLifetimeStatInfo.Stat
	64, // 33: CCitadelUserMessage_CurrencyChanged.victim_pos:type_name -> CMsgVector
	63, // 34: CCitadelUserMsg_GetDamageStatsResponse.damage:type_name -> CCitadelUserMsg_GetDamageStatsResponse.StatType
	63, // 35: CCitadelUserMsg_GetDamageStatsResponse.healing:type_name -> CCitadelUserMsg_GetDamageStatsResponse.StatType
	69, // 36: CCitadelUserMsg_ParticipantStartSoundEvent.event:type_name -> CMsgSosStartSoundEvent
	70, // 37: CCitadelUserMsg_ParticipantStopSoundEvent.event:type_name -> CMsgSosStopSoundEvent
	71, // 38: CCitadelUserMsg_ParticipantStopSoundEventHash.event:type_name -> CMsgSosStopSoundEventHash
	72, // 39: CCitadelUserMsg_ParticipantSetSoundEventParams.event:type_name -> CMsgSosSetSoundEventParams
	73, // 40: CCitadelUserMsg_ParticipantSetLibraryStackFields.event:type_name -> CMsgSosSetLibraryStackFields
	55, // 41: CCitadelUserMsg_GoldHistory.MinuteRecord.gold_records:type_name -> CCitadelUserMsg_GoldHistory.GoldRecord
	64, // 42: CCitadelUserMsg_CameraController.Approach.approach_vector:type_name -> CMsgVector
	64, // 43: CCitadelUserMsg_CameraController.Spring.target_vector:type_name -> CMsgVector
	64, // 44: CCitadelUserMsg_CameraController.Lerp.start_vector:type_name -> CMsgVector
	64, // 45: CCitadelUserMsg_CameraController.Lerp.end_vector:type_name -> CMsgVector
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_citadel_usermessages_proto_init() }
func file_citadel_usermessages_proto_init() {
	if File_citadel_usermessages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_citadel_usermessages_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CUserMessageEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_Damage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PingCommonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_MapPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_PingWheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_AbilityPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_QuickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_MapLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_TeamRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_TriggerDamageFlash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_AbilitiesChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_AbilityInterrupted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_AbilityLateFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_RecentDamageSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_SpectatorTeamChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ChatWheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ChatMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_GoldHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_CameraController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_PostMatchDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ChatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_HeroKilled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelEntityMsg_BreakablePropSpawnDebris); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ReturnIdol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_SetClientCameraAngles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_BulletHit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_ObjectiveMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_ModifierApplied); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_AuraModifierApplied); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ObstructedShotFired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_PostProcessingAnim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_DeathReplayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ForceShopClosed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_PlayerLifetimeStatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_StaminaDrained); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_AbilityNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_CurrencyChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMessage_GameOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_GetDamageStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ParticipantStartSoundEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ParticipantStopSoundEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ParticipantStopSoundEventHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ParticipantSetSoundEventParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_ParticipantSetLibraryStackFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_RecentDamageSummary_DamageRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_RecentDamageSummary_ModifierRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_GoldHistory_GoldRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_GoldHistory_MinuteRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_CameraController_Maintain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_CameraController_Approach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_CameraController_Spring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_CameraController_Lerp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_CameraController_Lag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_PlayerLifetimeStatInfo_Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_usermessages_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CCitadelUserMsg_GetDamageStatsResponse_StatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_citadel_usermessages_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_citadel_usermessages_proto_goTypes,
		DependencyIndexes: file_citadel_usermessages_proto_depIdxs,
		EnumInfos:         file_citadel_usermessages_proto_enumTypes,
		MessageInfos:      file_citadel_usermessages_proto_msgTypes,
	}.Build()
	File_citadel_usermessages_proto = out.File
	file_citadel_usermessages_proto_rawDesc = nil
	file_citadel_usermessages_proto_goTypes = nil
	file_citadel_usermessages_proto_depIdxs = nil
}
